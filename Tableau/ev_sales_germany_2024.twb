<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.25.0208.0338                               -->
<workbook original-version='18.1' source-build='2024.3.4 (20243.25.0208.0338)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AnimationOnByDefault />
    <Heatmap />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='GasStation_EVPoints' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Charging Station&quot;'>
        <calculation class='tableau' formula='&quot;Charging Station&quot;' />
        <members>
          <member value='&quot;Gas Station&quot;' />
          <member value='&quot;Charging Station&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='lavender_notebooks' inline='true' name='federated.1a230fy173rvz110w3eci0x04wqq' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='data-analytics-course-2.c8g8r1deus2v.eu-central-1.rds.amazonaws.com' name='postgres.1eqksoy13mepx81cv2w7l08bs39s'>
            <connection authentication='username-password' class='postgres' dbname='lavender_notebooks' one-time-sql='' port='5432' server='data-analytics-course-2.c8g8r1deus2v.eu-central-1.rds.amazonaws.com' username='muhammadhuzefaahmed' />
          </named-connection>
        </named-connections>
      </connection>
      <aliases enabled='yes' />
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <object-graph />
    </datasource>
    <datasource caption='ds5_germanygasstations (double_trouble.ds5_germanygasstations) (lavender_notebooks)' inline='true' name='federated.0cwf5am01d93k414a60rr195vtc5' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='data-analytics-course-2.c8g8r1deus2v.eu-central-1.rds.amazonaws.com' name='postgres.184vy76113570716uo1gj1v4jjdv'>
            <connection authentication='username-password' class='postgres' dbname='lavender_notebooks' one-time-sql='' port='5432' server='data-analytics-course-2.c8g8r1deus2v.eu-central-1.rds.amazonaws.com' username='muhammadhuzefaahmed' />
          </named-connection>
        </named-connections>
        <relation connection='postgres.184vy76113570716uo1gj1v4jjdv' name='ds5_germanygasstations' table='[double_trouble].[ds5_germanygasstations]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>uuid</remote-name>
            <remote-type>72</remote-type>
            <local-name>[uuid]</local-name>
            <parent-name>[ds5_germanygasstations]</parent-name>
            <remote-alias>uuid</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[ds5_germanygasstations (double_trouble.ds5_germanygasstations)_743656701D8A499BA326F22B9ADD4956]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[ds5_germanygasstations]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[ds5_germanygasstations (double_trouble.ds5_germanygasstations)_743656701D8A499BA326F22B9ADD4956]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>brand</remote-name>
            <remote-type>129</remote-type>
            <local-name>[brand]</local-name>
            <parent-name>[ds5_germanygasstations]</parent-name>
            <remote-alias>brand</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[ds5_germanygasstations (double_trouble.ds5_germanygasstations)_743656701D8A499BA326F22B9ADD4956]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>street</remote-name>
            <remote-type>129</remote-type>
            <local-name>[street]</local-name>
            <parent-name>[ds5_germanygasstations]</parent-name>
            <remote-alias>street</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[ds5_germanygasstations (double_trouble.ds5_germanygasstations)_743656701D8A499BA326F22B9ADD4956]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>house_number</remote-name>
            <remote-type>129</remote-type>
            <local-name>[house_number]</local-name>
            <parent-name>[ds5_germanygasstations]</parent-name>
            <remote-alias>house_number</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[ds5_germanygasstations (double_trouble.ds5_germanygasstations)_743656701D8A499BA326F22B9ADD4956]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>post_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[post_code]</local-name>
            <parent-name>[ds5_germanygasstations]</parent-name>
            <remote-alias>post_code</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[ds5_germanygasstations (double_trouble.ds5_germanygasstations)_743656701D8A499BA326F22B9ADD4956]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>129</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[ds5_germanygasstations]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[ds5_germanygasstations (double_trouble.ds5_germanygasstations)_743656701D8A499BA326F22B9ADD4956]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[ds5_germanygasstations]</parent-name>
            <remote-alias>latitude</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>8</precision>
            <contains-null>true</contains-null>
            <object-id>[ds5_germanygasstations (double_trouble.ds5_germanygasstations)_743656701D8A499BA326F22B9ADD4956]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[ds5_germanygasstations]</parent-name>
            <remote-alias>longitude</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>8</precision>
            <contains-null>true</contains-null>
            <object-id>[ds5_germanygasstations (double_trouble.ds5_germanygasstations)_743656701D8A499BA326F22B9ADD4956]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>first_active</remote-name>
            <remote-type>135</remote-type>
            <local-name>[first_active]</local-name>
            <parent-name>[ds5_germanygasstations]</parent-name>
            <remote-alias>first_active</remote-alias>
            <ordinal>10</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <object-id>[ds5_germanygasstations (double_trouble.ds5_germanygasstations)_743656701D8A499BA326F22B9ADD4956]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>openingtimes_json</remote-name>
            <remote-type>1</remote-type>
            <local-name>[openingtimes_json]</local-name>
            <parent-name>[ds5_germanygasstations]</parent-name>
            <remote-alias>openingtimes_json</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;jsonb&quot;</attribute>
            </attributes>
            <object-id>[ds5_germanygasstations (double_trouble.ds5_germanygasstations)_743656701D8A499BA326F22B9ADD4956]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Charging_GasPoints' datatype='integer' name='[Calculation_3650730516163465223]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if [Parameters].[Parameter 1] = &apos;Charging Station&apos; THEN ATTR([federated.086k1gm10z1nmp19scxzo0mo5d3a].[postleitzahl])&#10;ELSE ATTR([post_code])&#10;END' />
      </column>
      <column caption='City (copy)' datatype='string' default-role='measure' default-type='quantitative' name='[City (copy)_3650730514485092356]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
        <calculation class='tableau' formula='[city]' />
      </column>
      <column caption='ds5_germanygasstations' datatype='table' name='[__tableau_internal_object_id__].[ds5_germanygasstations (double_trouble.ds5_germanygasstations)_743656701D8A499BA326F22B9ADD4956]' role='measure' type='quantitative' />
      <column caption='Brand' datatype='string' name='[brand]' role='dimension' type='nominal' />
      <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='First Active' datatype='datetime' name='[first_active]' role='dimension' type='ordinal' />
      <column caption='House Number' datatype='string' name='[house_number]' role='dimension' type='nominal' />
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
      <column caption='Openingtimes Json' datatype='string' name='[openingtimes_json]' role='dimension' type='nominal' />
      <column aggregation='Sum' caption='Post Code' datatype='integer' datatype-customized='true' default-format='*00000' name='[post_code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column caption='Street' datatype='string' name='[street]' role='dimension' type='nominal' />
      <column caption='Uuid' datatype='string' name='[uuid]' role='dimension' type='nominal' />
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <datasource-dependencies datasource='Parameters'>
        <column caption='GasStation_EVPoints' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Charging Station&quot;'>
          <calculation class='tableau' formula='&quot;Charging Station&quot;' />
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.086k1gm10z1nmp19scxzo0mo5d3a'>
        <column aggregation='Sum' caption='Postleitzahl' datatype='integer' default-format='*00000' name='[postleitzahl]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      </datasource-dependencies>
      <object-graph>
        <objects>
          <object caption='ds5_germanygasstations' id='ds5_germanygasstations (double_trouble.ds5_germanygasstations)_743656701D8A499BA326F22B9ADD4956'>
            <properties context=''>
              <relation connection='postgres.184vy76113570716uo1gj1v4jjdv' name='ds5_germanygasstations' table='[double_trouble].[ds5_germanygasstations]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='ds6_charging_stations_prices (double_trouble.ds6_charging_stations_prices) (lavender_notebooks)' inline='true' name='federated.12am53r0iui4kf11r918r1n17n20' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='data-analytics-course-2.c8g8r1deus2v.eu-central-1.rds.amazonaws.com' name='postgres.11jfu5h01d22im1cnty2k01f2hi9'>
            <connection authentication='username-password' class='postgres' dbname='lavender_notebooks' one-time-sql='' port='5432' server='data-analytics-course-2.c8g8r1deus2v.eu-central-1.rds.amazonaws.com' username='muhammadhuzefaahmed' />
          </named-connection>
        </named-connections>
        <relation connection='postgres.11jfu5h01d22im1cnty2k01f2hi9' name='ds6_charging_stations_prices' table='[double_trouble].[ds6_charging_stations_prices]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Charging Station Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Charging Station Type]</local-name>
            <parent-name>[ds6_charging_stations_prices]</parent-name>
            <remote-alias>Charging Station Type</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[ds6_charging_stations_prices (double_trouble.ds6_charging_stations_prices)_C23A2458622A4D2994D03AA0BD93DC32]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Charging Speed (kW)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Charging Speed (kW)]</local-name>
            <parent-name>[ds6_charging_stations_prices]</parent-name>
            <remote-alias>Charging Speed (kW)</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[ds6_charging_stations_prices (double_trouble.ds6_charging_stations_prices)_C23A2458622A4D2994D03AA0BD93DC32]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Price Range (€/kWh)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Price Range (€/kWh)]</local-name>
            <parent-name>[ds6_charging_stations_prices]</parent-name>
            <remote-alias>Price Range (€/kWh)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>128</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[ds6_charging_stations_prices (double_trouble.ds6_charging_stations_prices)_C23A2458622A4D2994D03AA0BD93DC32]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Notes</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Notes]</local-name>
            <parent-name>[ds6_charging_stations_prices]</parent-name>
            <remote-alias>Notes</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>128</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[ds6_charging_stations_prices (double_trouble.ds6_charging_stations_prices)_C23A2458622A4D2994D03AA0BD93DC32]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='ds6_charging_stations_prices' datatype='table' name='[__tableau_internal_object_id__].[ds6_charging_stations_prices (double_trouble.ds6_charging_stations_prices)_C23A2458622A4D2994D03AA0BD93DC32]' role='measure' type='quantitative' />
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <object-graph>
        <objects>
          <object caption='ds6_charging_stations_prices' id='ds6_charging_stations_prices (double_trouble.ds6_charging_stations_prices)_C23A2458622A4D2994D03AA0BD93DC32'>
            <properties context=''>
              <relation connection='postgres.11jfu5h01d22im1cnty2k01f2hi9' name='ds6_charging_stations_prices' table='[double_trouble].[ds6_charging_stations_prices]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='ds7_e_car_sales (double_trouble.ds7_e_car_sales) (lavender_notebooks)' inline='true' name='federated.1vyi95b0q8yknk13dw5u81htbwnw' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='data-analytics-course-2.c8g8r1deus2v.eu-central-1.rds.amazonaws.com' name='postgres.0zqaffk1487x9u1e1y69w15q8p0g'>
            <connection authentication='username-password' class='postgres' dbname='lavender_notebooks' one-time-sql='' port='5432' server='data-analytics-course-2.c8g8r1deus2v.eu-central-1.rds.amazonaws.com' username='muhammadhuzefaahmed' />
          </named-connection>
        </named-connections>
        <relation connection='postgres.0zqaffk1487x9u1e1y69w15q8p0g' name='ds7_e_car_sales' table='[double_trouble].[ds7_e_car_sales]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>brand</remote-name>
            <remote-type>129</remote-type>
            <local-name>[brand]</local-name>
            <parent-name>[ds7_e_car_sales]</parent-name>
            <remote-alias>brand</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[ds7_e_car_sales (double_trouble.ds7_e_car_sales)_1340148BD5F34C389EC0294766AF843D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bev_sales</remote-name>
            <remote-type>131</remote-type>
            <local-name>[bev_sales]</local-name>
            <parent-name>[ds7_e_car_sales]</parent-name>
            <remote-alias>bev_sales</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <object-id>[ds7_e_car_sales (double_trouble.ds7_e_car_sales)_1340148BD5F34C389EC0294766AF843D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>market_share_per</remote-name>
            <remote-type>5</remote-type>
            <local-name>[market_share_per]</local-name>
            <parent-name>[ds7_e_car_sales]</parent-name>
            <remote-alias>market_share_per</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>8</precision>
            <contains-null>true</contains-null>
            <object-id>[ds7_e_car_sales (double_trouble.ds7_e_car_sales)_1340148BD5F34C389EC0294766AF843D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>non_bev_sales</remote-name>
            <remote-type>131</remote-type>
            <local-name>[non_bev_sales]</local-name>
            <parent-name>[ds7_e_car_sales]</parent-name>
            <remote-alias>non_bev_sales</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <object-id>[ds7_e_car_sales (double_trouble.ds7_e_car_sales)_1340148BD5F34C389EC0294766AF843D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>all_sales</remote-name>
            <remote-type>129</remote-type>
            <local-name>[all_sales]</local-name>
            <parent-name>[ds7_e_car_sales]</parent-name>
            <remote-alias>all_sales</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[ds7_e_car_sales (double_trouble.ds7_e_car_sales)_1340148BD5F34C389EC0294766AF843D]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='ds7_e_car_sales' datatype='table' name='[__tableau_internal_object_id__].[ds7_e_car_sales (double_trouble.ds7_e_car_sales)_1340148BD5F34C389EC0294766AF843D]' role='measure' type='quantitative' />
      <column caption='All Sales' datatype='integer' datatype-customized='true' name='[all_sales]' role='dimension' type='ordinal' />
      <column caption='Bev Sales' datatype='integer' datatype-customized='true' name='[bev_sales]' role='dimension' type='ordinal' />
      <column caption='Brand' datatype='string' name='[brand]' role='dimension' type='nominal' />
      <column caption='Market Share Per' datatype='real' name='[market_share_per]' role='measure' type='quantitative' />
      <column caption='Non Bev Sales' datatype='integer' datatype-customized='true' name='[non_bev_sales]' role='dimension' type='ordinal' />
      <column-instance column='[bev_sales]' derivation='None' name='[none:bev_sales:ok]' pivot='key' type='ordinal' />
      <column-instance column='[brand]' derivation='None' name='[none:brand:nk]' pivot='key' type='nominal' />
      <column-instance column='[non_bev_sales]' derivation='None' name='[none:non_bev_sales:ok]' pivot='key' type='ordinal' />
      <column-instance column='[all_sales]' derivation='Sum' name='[sum:all_sales:qk]' pivot='key' type='quantitative' />
      <column-instance column='[bev_sales]' derivation='Sum' name='[sum:bev_sales:qk]' pivot='key' type='quantitative' />
      <group hidden='true' name='[Exclusions (Bev Sales,Brand)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:bev_sales:ok]' />
          <groupfilter function='level-members' level='[none:brand:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Bev Sales,Brand,Non Bev Sales)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:bev_sales:ok]' />
          <groupfilter function='level-members' level='[none:brand:nk]' />
          <groupfilter function='level-members' level='[none:non_bev_sales:ok]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1vyi95b0q8yknk13dw5u81htbwnw].[sum:bev_sales:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1vyi95b0q8yknk13dw5u81htbwnw].[sum:all_sales:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:non_bev_sales:ok]' palette='sf_bluegrass' type='palette'>
            <map to='#116985'>
              <bucket>474780</bucket>
            </map>
            <map to='#27aab0'>
              <bucket>223897</bucket>
            </map>
            <map to='#499894'>
              <bucket>64105</bucket>
            </map>
            <map to='#51d2bb'>
              <bucket>190820</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>48552</bucket>
            </map>
            <map to='#79706e'>
              <bucket>134086</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>67769</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>48791</bucket>
            </map>
            <map to='#94e7a8'>
              <bucket>180285</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>6607</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>49087</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>140200</bucket>
            </map>
            <map to='#c7f296'>
              <bucket>0</bucket>
            </map>
            <map to='#e15759'>
              <bucket>79413</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>56819</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>23346</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>180486</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>94016</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>28843</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <object-graph>
        <objects>
          <object caption='ds7_e_car_sales' id='ds7_e_car_sales (double_trouble.ds7_e_car_sales)_1340148BD5F34C389EC0294766AF843D'>
            <properties context=''>
              <relation connection='postgres.0zqaffk1487x9u1e1y69w15q8p0g' name='ds7_e_car_sales' table='[double_trouble].[ds7_e_car_sales]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='ds10_chargingprice (double_trouble.ds10_chargingprice) (lavender_notebooks)' inline='true' name='federated.14xasa601bf0p71gikjyg0ojtaz3' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='data-analytics-course-2.c8g8r1deus2v.eu-central-1.rds.amazonaws.com' name='postgres.0lt685h0n3rlyg1b5g69k0xwt9rp'>
            <connection authentication='username-password' class='postgres' dbname='lavender_notebooks' one-time-sql='' port='5432' server='data-analytics-course-2.c8g8r1deus2v.eu-central-1.rds.amazonaws.com' username='muhammadhuzefaahmed' />
          </named-connection>
        </named-connections>
        <relation connection='postgres.0lt685h0n3rlyg1b5g69k0xwt9rp' name='ds10_chargingprice' table='[double_trouble].[ds10_chargingprice]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[ds10_chargingprice]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <object-id>[ds10_chargingprice (double_trouble.ds10_chargingprice)_40AD734A336944D290AC89542589F3FD]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>charging_station_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[charging_station_type]</local-name>
            <parent-name>[ds10_chargingprice]</parent-name>
            <remote-alias>charging_station_type</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[ds10_chargingprice (double_trouble.ds10_chargingprice)_40AD734A336944D290AC89542589F3FD]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>charging_speed_kw</remote-name>
            <remote-type>129</remote-type>
            <local-name>[charging_speed_kw]</local-name>
            <parent-name>[ds10_chargingprice]</parent-name>
            <remote-alias>charging_speed_kw</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[ds10_chargingprice (double_trouble.ds10_chargingprice)_40AD734A336944D290AC89542589F3FD]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>eur_price_kw</remote-name>
            <remote-type>129</remote-type>
            <local-name>[eur_price_kw]</local-name>
            <parent-name>[ds10_chargingprice]</parent-name>
            <remote-alias>eur_price_kw</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[ds10_chargingprice (double_trouble.ds10_chargingprice)_40AD734A336944D290AC89542589F3FD]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>calc_avg_eur_price_kw</remote-name>
            <remote-type>5</remote-type>
            <local-name>[calc_avg_eur_price_kw]</local-name>
            <parent-name>[ds10_chargingprice]</parent-name>
            <remote-alias>calc_avg_eur_price_kw</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>8</precision>
            <contains-null>true</contains-null>
            <object-id>[ds10_chargingprice (double_trouble.ds10_chargingprice)_40AD734A336944D290AC89542589F3FD]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='ds10_chargingprice' datatype='table' name='[__tableau_internal_object_id__].[ds10_chargingprice (double_trouble.ds10_chargingprice)_40AD734A336944D290AC89542589F3FD]' role='measure' type='quantitative' />
      <column caption='Calc Avg Eur Price Kw' datatype='real' name='[calc_avg_eur_price_kw]' role='measure' type='quantitative' />
      <column caption='Charging Speed Kw' datatype='string' name='[charging_speed_kw]' role='dimension' type='nominal' />
      <column caption='Charging Station Type' datatype='string' name='[charging_station_type]' role='dimension' type='nominal' />
      <column caption='Eur Price Kw' datatype='string' name='[eur_price_kw]' role='dimension' type='nominal' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <object-graph>
        <objects>
          <object caption='ds10_chargingprice' id='ds10_chargingprice (double_trouble.ds10_chargingprice)_40AD734A336944D290AC89542589F3FD'>
            <properties context=''>
              <relation connection='postgres.0lt685h0n3rlyg1b5g69k0xwt9rp' name='ds10_chargingprice' table='[double_trouble].[ds10_chargingprice]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='ds1_ev_cars1 (double_trouble.ds1_ev_cars1) (lavender_notebooks)' inline='true' name='federated.06ad92g138o9vi16zgmyt0k9zjql' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='data-analytics-course-2.c8g8r1deus2v.eu-central-1.rds.amazonaws.com' name='postgres.1e2jvae1okleil1h6muyx1u33r58'>
            <connection authentication='username-password' class='postgres' dbname='lavender_notebooks' one-time-sql='' port='5432' server='data-analytics-course-2.c8g8r1deus2v.eu-central-1.rds.amazonaws.com' username='muhammadhuzefaahmed' />
          </named-connection>
        </named-connections>
        <relation connection='postgres.1e2jvae1okleil1h6muyx1u33r58' name='ds1_ev_cars1' table='[double_trouble].[ds1_ev_cars1]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>car_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[car_name]</local-name>
            <parent-name>[ds1_ev_cars1]</parent-name>
            <remote-alias>car_name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[ds1_ev_cars1 (double_trouble.ds1_ev_cars1)_B7417B245D88419C8D63103A70970437]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>battery</remote-name>
            <remote-type>131</remote-type>
            <local-name>[battery]</local-name>
            <parent-name>[ds1_ev_cars1]</parent-name>
            <remote-alias>battery</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>false</contains-null>
            <object-id>[ds1_ev_cars1 (double_trouble.ds1_ev_cars1)_B7417B245D88419C8D63103A70970437]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fast_charge</remote-name>
            <remote-type>131</remote-type>
            <local-name>[fast_charge]</local-name>
            <parent-name>[ds1_ev_cars1]</parent-name>
            <remote-alias>fast_charge</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>false</contains-null>
            <object-id>[ds1_ev_cars1 (double_trouble.ds1_ev_cars1)_B7417B245D88419C8D63103A70970437]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ranges_km</remote-name>
            <remote-type>131</remote-type>
            <local-name>[ranges_km]</local-name>
            <parent-name>[ds1_ev_cars1]</parent-name>
            <remote-alias>ranges_km</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>false</contains-null>
            <object-id>[ds1_ev_cars1 (double_trouble.ds1_ev_cars1)_B7417B245D88419C8D63103A70970437]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>efficiency</remote-name>
            <remote-type>131</remote-type>
            <local-name>[efficiency]</local-name>
            <parent-name>[ds1_ev_cars1]</parent-name>
            <remote-alias>efficiency</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>false</contains-null>
            <object-id>[ds1_ev_cars1 (double_trouble.ds1_ev_cars1)_B7417B245D88419C8D63103A70970437]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>top_speed</remote-name>
            <remote-type>131</remote-type>
            <local-name>[top_speed]</local-name>
            <parent-name>[ds1_ev_cars1]</parent-name>
            <remote-alias>top_speed</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>false</contains-null>
            <object-id>[ds1_ev_cars1 (double_trouble.ds1_ev_cars1)_B7417B245D88419C8D63103A70970437]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>acceleration_0_100</remote-name>
            <remote-type>131</remote-type>
            <local-name>[acceleration_0_100]</local-name>
            <parent-name>[ds1_ev_cars1]</parent-name>
            <remote-alias>acceleration_0_100</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>false</contains-null>
            <object-id>[ds1_ev_cars1 (double_trouble.ds1_ev_cars1)_B7417B245D88419C8D63103A70970437]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>price_de</remote-name>
            <remote-type>131</remote-type>
            <local-name>[price_de]</local-name>
            <parent-name>[ds1_ev_cars1]</parent-name>
            <remote-alias>price_de</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>false</contains-null>
            <object-id>[ds1_ev_cars1 (double_trouble.ds1_ev_cars1)_B7417B245D88419C8D63103A70970437]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>brand_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[brand_name]</local-name>
            <parent-name>[ds1_ev_cars1]</parent-name>
            <remote-alias>brand_name</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[ds1_ev_cars1 (double_trouble.ds1_ev_cars1)_B7417B245D88419C8D63103A70970437]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Brand Name (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[brand_name]' new-bin='true'>
          <bin default-name='false' value='&quot;BMW Group&quot;'>
            <value>&quot;BMW&quot;</value>
            <value>&quot;Mini&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Geely Group (China)&quot;'>
            <value>&quot;Lotus&quot;</value>
            <value>&quot;Polestar&quot;</value>
            <value>&quot;Volvo&quot;</value>
            <value>&quot;Zeekr&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Hyundai Motor Group&quot;'>
            <value>&quot;Genesis&quot;</value>
            <value>&quot;Hyundai&quot;</value>
            <value>&quot;Kia&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Mercedes-Benz Group&quot;'>
            <value>&quot;Mercedes&quot;</value>
            <value>&quot;Smart&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Nissan, Renault&quot;'>
            <value>&quot;Nissan&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Other Chinese EV Brands&quot;'>
            <value>&quot;Aiways&quot;</value>
            <value>&quot;BYD&quot;</value>
            <value>&quot;Maxus&quot;</value>
            <value>&quot;MG&quot;</value>
            <value>&quot;NIO&quot;</value>
            <value>&quot;ORA&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Others&quot;'>
            <value>&quot;Elaris&quot;</value>
            <value>&quot;Fisker&quot;</value>
            <value>&quot;Lucid&quot;</value>
            <value>&quot;SsangYong&quot;</value>
            <value>&quot;Subaru&quot;</value>
            <value>&quot;VinFast&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Renault Group&quot;'>
            <value>&quot;Dacia&quot;</value>
            <value>&quot;Renault&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Stellantis&quot;'>
            <value>&quot;Abarth&quot;</value>
            <value>&quot;Citroen&quot;</value>
            <value>&quot;DS&quot;</value>
            <value>&quot;Fiat&quot;</value>
            <value>&quot;Jeep&quot;</value>
            <value>&quot;Opel&quot;</value>
            <value>&quot;Peugeot&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Toyota Group&quot;'>
            <value>&quot;Lexus&quot;</value>
            <value>&quot;Toyota&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;VW Group&quot;'>
            <value>&quot;Audi&quot;</value>
            <value>&quot;CUPRA&quot;</value>
            <value>&quot;Porsche&quot;</value>
            <value>&quot;Skoda&quot;</value>
            <value>&quot;Volkswagen&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='ds1_ev_cars1' datatype='table' name='[__tableau_internal_object_id__].[ds1_ev_cars1 (double_trouble.ds1_ev_cars1)_B7417B245D88419C8D63103A70970437]' role='measure' type='quantitative' />
      <column caption='Acceleration 0 100' datatype='real' name='[acceleration_0_100]' role='measure' type='quantitative' />
      <column caption='Battery' datatype='real' name='[battery]' role='measure' type='quantitative' />
      <column caption='Brand Name' datatype='string' name='[brand_name]' role='dimension' type='nominal' />
      <column caption='Car Name' datatype='string' name='[car_name]' role='dimension' type='nominal' />
      <column caption='Efficiency' datatype='real' name='[efficiency]' role='measure' type='quantitative' />
      <column caption='Fast Charge' datatype='real' name='[fast_charge]' role='measure' type='quantitative' />
      <column caption='Price De' datatype='real' name='[price_de]' role='measure' type='quantitative' />
      <column caption='Ranges Km' datatype='real' name='[ranges_km]' role='measure' type='quantitative' />
      <column caption='Top Speed' datatype='real' name='[top_speed]' role='measure' type='quantitative' />
      <column-instance column='[brand_name]' derivation='None' name='[none:brand_name:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Brand Name (group)]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Nissan, Renault&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;BMW Group&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hyundai Motor Group&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Stellantis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Other Chinese EV Brands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jaguar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ford&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mazda&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tesla&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Toyota Group&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Others&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mercedes-Benz Group&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Geely Group (China)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;VW Group&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Renault Group&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Honda&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:brand_name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;DS&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nissan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Abarth&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lotus&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Toyota&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;BYD&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mercedes&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Zeekr&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ford&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Polestar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Elaris&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Opel&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Citroen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MG&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Subaru&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Aiways&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lucid&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;VinFast&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jaguar&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Smart&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;CUPRA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mini&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Genesis&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Porsche&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Honda&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Renault&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jeep&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;SsangYong&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lexus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tesla&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fiat&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ORA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dacia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;NIO&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Audi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Maxus&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Volkswagen&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hyundai&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Skoda&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fisker&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Peugeot&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;BMW&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mazda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Volvo&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <object-graph>
        <objects>
          <object caption='ds1_ev_cars1' id='ds1_ev_cars1 (double_trouble.ds1_ev_cars1)_B7417B245D88419C8D63103A70970437'>
            <properties context=''>
              <relation connection='postgres.1e2jvae1okleil1h6muyx1u33r58' name='ds1_ev_cars1' table='[double_trouble].[ds1_ev_cars1]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='ds9_sales_and_market_share_final (double_trouble.ds9_sales_and_market_share_final) (lavender_notebooks)' inline='true' name='federated.0dg9z711egh454194wrp511fclx2' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='data-analytics-course-2.c8g8r1deus2v.eu-central-1.rds.amazonaws.com' name='postgres.145izix1i33wfi1b3q16d0yeayev'>
            <connection authentication='username-password' class='postgres' dbname='lavender_notebooks' one-time-sql='' port='5432' server='data-analytics-course-2.c8g8r1deus2v.eu-central-1.rds.amazonaws.com' username='muhammadhuzefaahmed' />
          </named-connection>
        </named-connections>
        <relation connection='postgres.145izix1i33wfi1b3q16d0yeayev' name='ds9_sales_and_market_share_final' table='[double_trouble].[ds9_sales_and_market_share_final]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[ds9_sales_and_market_share_final]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <object-id>[ds9_sales_and_market_share_final (double_trouble.ds9_sales_and_market_share_final)_3F28AD52CA044CFE852F3A1D8EAEBB58]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>brand</remote-name>
            <remote-type>129</remote-type>
            <local-name>[brand]</local-name>
            <parent-name>[ds9_sales_and_market_share_final]</parent-name>
            <remote-alias>brand</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[ds9_sales_and_market_share_final (double_trouble.ds9_sales_and_market_share_final)_3F28AD52CA044CFE852F3A1D8EAEBB58]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>global_bev_share</remote-name>
            <remote-type>5</remote-type>
            <local-name>[global_bev_share]</local-name>
            <parent-name>[ds9_sales_and_market_share_final]</parent-name>
            <remote-alias>global_bev_share</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>8</precision>
            <contains-null>true</contains-null>
            <object-id>[ds9_sales_and_market_share_final (double_trouble.ds9_sales_and_market_share_final)_3F28AD52CA044CFE852F3A1D8EAEBB58]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>eu_bev_share</remote-name>
            <remote-type>5</remote-type>
            <local-name>[eu_bev_share]</local-name>
            <parent-name>[ds9_sales_and_market_share_final]</parent-name>
            <remote-alias>eu_bev_share</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>8</precision>
            <contains-null>true</contains-null>
            <object-id>[ds9_sales_and_market_share_final (double_trouble.ds9_sales_and_market_share_final)_3F28AD52CA044CFE852F3A1D8EAEBB58]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>germany_bev_share</remote-name>
            <remote-type>3</remote-type>
            <local-name>[germany_bev_share]</local-name>
            <parent-name>[ds9_sales_and_market_share_final]</parent-name>
            <remote-alias>germany_bev_share</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <object-id>[ds9_sales_and_market_share_final (double_trouble.ds9_sales_and_market_share_final)_3F28AD52CA044CFE852F3A1D8EAEBB58]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>global_market_sales</remote-name>
            <remote-type>3</remote-type>
            <local-name>[global_market_sales]</local-name>
            <parent-name>[ds9_sales_and_market_share_final]</parent-name>
            <remote-alias>global_market_sales</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <object-id>[ds9_sales_and_market_share_final (double_trouble.ds9_sales_and_market_share_final)_3F28AD52CA044CFE852F3A1D8EAEBB58]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>global_market_sales_bev</remote-name>
            <remote-type>3</remote-type>
            <local-name>[global_market_sales_bev]</local-name>
            <parent-name>[ds9_sales_and_market_share_final]</parent-name>
            <remote-alias>global_market_sales_bev</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <object-id>[ds9_sales_and_market_share_final (double_trouble.ds9_sales_and_market_share_final)_3F28AD52CA044CFE852F3A1D8EAEBB58]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>europe_market_sales_bev</remote-name>
            <remote-type>3</remote-type>
            <local-name>[europe_market_sales_bev]</local-name>
            <parent-name>[ds9_sales_and_market_share_final]</parent-name>
            <remote-alias>europe_market_sales_bev</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <object-id>[ds9_sales_and_market_share_final (double_trouble.ds9_sales_and_market_share_final)_3F28AD52CA044CFE852F3A1D8EAEBB58]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>germany_market_sales_bev</remote-name>
            <remote-type>3</remote-type>
            <local-name>[germany_market_sales_bev]</local-name>
            <parent-name>[ds9_sales_and_market_share_final]</parent-name>
            <remote-alias>germany_market_sales_bev</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <object-id>[ds9_sales_and_market_share_final (double_trouble.ds9_sales_and_market_share_final)_3F28AD52CA044CFE852F3A1D8EAEBB58]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>germany_total_el_cars_sales</remote-name>
            <remote-type>3</remote-type>
            <local-name>[germany_total_el_cars_sales]</local-name>
            <parent-name>[ds9_sales_and_market_share_final]</parent-name>
            <remote-alias>germany_total_el_cars_sales</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <object-id>[ds9_sales_and_market_share_final (double_trouble.ds9_sales_and_market_share_final)_3F28AD52CA044CFE852F3A1D8EAEBB58]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='ds9_sales_and_market_share_final' datatype='table' name='[__tableau_internal_object_id__].[ds9_sales_and_market_share_final (double_trouble.ds9_sales_and_market_share_final)_3F28AD52CA044CFE852F3A1D8EAEBB58]' role='measure' type='quantitative' />
      <column caption='Brand' datatype='string' name='[brand]' role='dimension' type='nominal' />
      <column caption='Eu Bev Share' datatype='real' name='[eu_bev_share]' role='measure' type='quantitative' />
      <column caption='Europe Market Sales Bev' datatype='integer' name='[europe_market_sales_bev]' role='measure' type='quantitative' />
      <column caption='Germany Bev Share' datatype='integer' name='[germany_bev_share]' role='measure' type='quantitative' />
      <column caption='Germany Market Sales Bev' datatype='integer' name='[germany_market_sales_bev]' role='measure' type='quantitative' />
      <column caption='Germany Total El Cars Sales' datatype='integer' name='[germany_total_el_cars_sales]' role='measure' type='quantitative' />
      <column caption='Global Bev Share' datatype='real' name='[global_bev_share]' role='measure' type='quantitative' />
      <column caption='Global Market Sales' datatype='integer' name='[global_market_sales]' role='measure' type='quantitative' />
      <column caption='Global Market Sales Bev' datatype='integer' name='[global_market_sales_bev]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[brand]' derivation='None' name='[none:brand:nk]' pivot='key' type='nominal' />
      <column-instance column='[europe_market_sales_bev]' derivation='Sum' name='[sum:europe_market_sales_bev:qk]' pivot='key' type='quantitative' />
      <column-instance column='[germany_bev_share]' derivation='Sum' name='[sum:germany_bev_share:qk]' pivot='key' type='quantitative' />
      <column-instance column='[germany_market_sales_bev]' derivation='Sum' name='[sum:germany_market_sales_bev:qk]' pivot='key' type='quantitative' />
      <column-instance column='[global_bev_share]' derivation='Sum' name='[sum:global_bev_share:qk]' pivot='key' type='quantitative' />
      <column-instance column='[global_market_sales]' derivation='Sum' name='[sum:global_market_sales:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0dg9z711egh454194wrp511fclx2].[sum:europe_market_sales_bev:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0dg9z711egh454194wrp511fclx2]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0dg9z711egh454194wrp511fclx2].[sum:global_market_sales:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0dg9z711egh454194wrp511fclx2].[sum:global_bev_share:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0dg9z711egh454194wrp511fclx2].[sum:germany_market_sales_bev:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0dg9z711egh454194wrp511fclx2].[sum:germany_bev_share:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:brand:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;bmw&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;vw_group&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;tesla&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;skoda&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;mercedes&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:brand:nk]&#10;[:Measure Names]' type='palette'>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;bmw&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;tesla&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;skoda&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;mercedes&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;vw_group&quot;</bucket>
            </map-pri>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <object-graph>
        <objects>
          <object caption='ds9_sales_and_market_share_final' id='ds9_sales_and_market_share_final (double_trouble.ds9_sales_and_market_share_final)_3F28AD52CA044CFE852F3A1D8EAEBB58'>
            <properties context=''>
              <relation connection='postgres.145izix1i33wfi1b3q16d0yeayev' name='ds9_sales_and_market_share_final' table='[double_trouble].[ds9_sales_and_market_share_final]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='DS3_charging_data' inline='true' name='federated.086k1gm10z1nmp19scxzo0mo5d3a' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='DS3_charging_data' name='textscan.0cj4foh1yatolm1f8k55h0xpry29'>
            <connection class='textscan' directory='/Users/huzefa/Desktop/SPICED/Final_Project-Spiced-/data' filename='DS3_charging_data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation all='true' name='DS3_charging_data.csv+' type='union'>
          <columns character-set='UTF-8' header='yes' locale='en' separator=','>
            <column datatype='integer' name='F1' />
            <column datatype='string' name='betreiber' />
            <column datatype='string' name='art_der_ladeeinrichung' />
            <column datatype='integer' name='anzahl_ladepunkte' />
            <column datatype='real' name='anschlussleistung' />
            <column datatype='string' name='steckertypen1' />
            <column datatype='string' name='steckertypen2' />
            <column datatype='string' name='steckertypen3' />
            <column datatype='string' name='steckertypen4' />
            <column datatype='real' name='p1_kw' />
            <column datatype='real' name='p2_kw' />
            <column datatype='real' name='p3_kw' />
            <column datatype='real' name='p4_kw' />
            <column datatype='string' name='kreis_kreisfreie_stadt' />
            <column datatype='string' name='ort' />
            <column datatype='integer' name='postleitzahl' />
            <column datatype='string' name='strasse' />
            <column datatype='string' name='hausnummer' />
            <column datatype='string' name='adresszusatz' />
            <column datatype='date' name='inbetriebnahmedatum' />
            <column datatype='real' name='breitengrad' />
            <column datatype='real' name='laengengrad' />
            <column datatype='string' name='uuid' />
            <column datatype='string' name='name' />
            <column datatype='string' name='brand' />
            <column datatype='string' name='street' />
            <column datatype='string' name='house_number' />
            <column datatype='integer' name='post_code' />
            <column datatype='string' name='city' />
            <column datatype='real' name='latitude' />
            <column datatype='real' name='longitude' />
            <column datatype='string' name='first_active' />
            <column datatype='string' name='openingtimes_json' />
            <column datatype='string' name='Table Name' />
          </columns>
          <relation connection='textscan.0cj4foh1yatolm1f8k55h0xpry29' name='DS3_charging_data.csv' table='[DS3_charging_data#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='string' name='betreiber' ordinal='1' />
              <column datatype='string' name='art_der_ladeeinrichung' ordinal='2' />
              <column datatype='integer' name='anzahl_ladepunkte' ordinal='3' />
              <column datatype='real' name='anschlussleistung' ordinal='4' />
              <column datatype='string' name='steckertypen1' ordinal='5' />
              <column datatype='string' name='steckertypen2' ordinal='6' />
              <column datatype='string' name='steckertypen3' ordinal='7' />
              <column datatype='string' name='steckertypen4' ordinal='8' />
              <column datatype='real' name='p1_kw' ordinal='9' />
              <column datatype='real' name='p2_kw' ordinal='10' />
              <column datatype='real' name='p3_kw' ordinal='11' />
              <column datatype='real' name='p4_kw' ordinal='12' />
              <column datatype='string' name='kreis_kreisfreie_stadt' ordinal='13' />
              <column datatype='string' name='ort' ordinal='14' />
              <column datatype='integer' name='postleitzahl' ordinal='15' />
              <column datatype='string' name='strasse' ordinal='16' />
              <column datatype='string' name='hausnummer' ordinal='17' />
              <column datatype='string' name='adresszusatz' ordinal='18' />
              <column datatype='date' name='inbetriebnahmedatum' ordinal='19' />
              <column datatype='real' name='breitengrad' ordinal='20' />
              <column datatype='real' name='laengengrad' ordinal='21' />
            </columns>
          </relation>
          <relation connection='textscan.0cj4foh1yatolm1f8k55h0xpry29' name='DS5_GermanyGasStations.csv' table='[DS5_GermanyGasStations#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en' separator=','>
              <column datatype='string' name='uuid' ordinal='0' />
              <column datatype='string' name='name' ordinal='1' />
              <column datatype='string' name='brand' ordinal='2' />
              <column datatype='string' name='street' ordinal='3' />
              <column datatype='string' name='house_number' ordinal='4' />
              <column datatype='integer' name='post_code' ordinal='5' />
              <column datatype='string' name='city' ordinal='6' />
              <column datatype='real' name='latitude' ordinal='7' />
              <column datatype='real' name='longitude' ordinal='8' />
              <column datatype='string' name='first_active' ordinal='9' />
              <column datatype='string' name='openingtimes_json' ordinal='10' />
            </columns>
          </relation>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[DS3_charging_data.csv+]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[DS3_charging_data.csv+]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[DS3_charging_data.csv_2E16DB31176F4722BAA93687A762B6B8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>betreiber</remote-name>
            <remote-type>129</remote-type>
            <local-name>[betreiber]</local-name>
            <parent-name>[DS3_charging_data.csv+]</parent-name>
            <remote-alias>betreiber</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[DS3_charging_data.csv_2E16DB31176F4722BAA93687A762B6B8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>art_der_ladeeinrichung</remote-name>
            <remote-type>129</remote-type>
            <local-name>[art_der_ladeeinrichung]</local-name>
            <parent-name>[DS3_charging_data.csv+]</parent-name>
            <remote-alias>art_der_ladeeinrichung</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[DS3_charging_data.csv_2E16DB31176F4722BAA93687A762B6B8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>anzahl_ladepunkte</remote-name>
            <remote-type>20</remote-type>
            <local-name>[anzahl_ladepunkte]</local-name>
            <parent-name>[DS3_charging_data.csv+]</parent-name>
            <remote-alias>anzahl_ladepunkte</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[DS3_charging_data.csv_2E16DB31176F4722BAA93687A762B6B8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>anschlussleistung</remote-name>
            <remote-type>5</remote-type>
            <local-name>[anschlussleistung]</local-name>
            <parent-name>[DS3_charging_data.csv+]</parent-name>
            <remote-alias>anschlussleistung</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[DS3_charging_data.csv_2E16DB31176F4722BAA93687A762B6B8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>steckertypen1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[steckertypen1]</local-name>
            <parent-name>[DS3_charging_data.csv+]</parent-name>
            <remote-alias>steckertypen1</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[DS3_charging_data.csv_2E16DB31176F4722BAA93687A762B6B8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>steckertypen2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[steckertypen2]</local-name>
            <parent-name>[DS3_charging_data.csv+]</parent-name>
            <remote-alias>steckertypen2</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[DS3_charging_data.csv_2E16DB31176F4722BAA93687A762B6B8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>steckertypen3</remote-name>
            <remote-type>129</remote-type>
            <local-name>[steckertypen3]</local-name>
            <parent-name>[DS3_charging_data.csv+]</parent-name>
            <remote-alias>steckertypen3</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[DS3_charging_data.csv_2E16DB31176F4722BAA93687A762B6B8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>steckertypen4</remote-name>
            <remote-type>129</remote-type>
            <local-name>[steckertypen4]</local-name>
            <parent-name>[DS3_charging_data.csv+]</parent-name>
            <remote-alias>steckertypen4</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[DS3_charging_data.csv_2E16DB31176F4722BAA93687A762B6B8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>p1_kw</remote-name>
            <remote-type>5</remote-type>
            <local-name>[p1_kw]</local-name>
            <parent-name>[DS3_charging_data.csv+]</parent-name>
            <remote-alias>p1_kw</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[DS3_charging_data.csv_2E16DB31176F4722BAA93687A762B6B8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>p2_kw</remote-name>
            <remote-type>5</remote-type>
            <local-name>[p2_kw]</local-name>
            <parent-name>[DS3_charging_data.csv+]</parent-name>
            <remote-alias>p2_kw</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[DS3_charging_data.csv_2E16DB31176F4722BAA93687A762B6B8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>p3_kw</remote-name>
            <remote-type>5</remote-type>
            <local-name>[p3_kw]</local-name>
            <parent-name>[DS3_charging_data.csv+]</parent-name>
            <remote-alias>p3_kw</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[DS3_charging_data.csv_2E16DB31176F4722BAA93687A762B6B8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>p4_kw</remote-name>
            <remote-type>5</remote-type>
            <local-name>[p4_kw]</local-name>
            <parent-name>[DS3_charging_data.csv+]</parent-name>
            <remote-alias>p4_kw</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[DS3_charging_data.csv_2E16DB31176F4722BAA93687A762B6B8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>kreis_kreisfreie_stadt</remote-name>
            <remote-type>129</remote-type>
            <local-name>[kreis_kreisfreie_stadt]</local-name>
            <parent-name>[DS3_charging_data.csv+]</parent-name>
            <remote-alias>kreis_kreisfreie_stadt</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[DS3_charging_data.csv_2E16DB31176F4722BAA93687A762B6B8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ort</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ort]</local-name>
            <parent-name>[DS3_charging_data.csv+]</parent-name>
            <remote-alias>ort</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[DS3_charging_data.csv_2E16DB31176F4722BAA93687A762B6B8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>postleitzahl</remote-name>
            <remote-type>20</remote-type>
            <local-name>[postleitzahl]</local-name>
            <parent-name>[DS3_charging_data.csv+]</parent-name>
            <remote-alias>postleitzahl</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[DS3_charging_data.csv_2E16DB31176F4722BAA93687A762B6B8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>strasse</remote-name>
            <remote-type>129</remote-type>
            <local-name>[strasse]</local-name>
            <parent-name>[DS3_charging_data.csv+]</parent-name>
            <remote-alias>strasse</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[DS3_charging_data.csv_2E16DB31176F4722BAA93687A762B6B8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hausnummer</remote-name>
            <remote-type>129</remote-type>
            <local-name>[hausnummer]</local-name>
            <parent-name>[DS3_charging_data.csv+]</parent-name>
            <remote-alias>hausnummer</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[DS3_charging_data.csv_2E16DB31176F4722BAA93687A762B6B8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>adresszusatz</remote-name>
            <remote-type>129</remote-type>
            <local-name>[adresszusatz]</local-name>
            <parent-name>[DS3_charging_data.csv+]</parent-name>
            <remote-alias>adresszusatz</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[DS3_charging_data.csv_2E16DB31176F4722BAA93687A762B6B8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>inbetriebnahmedatum</remote-name>
            <remote-type>7</remote-type>
            <local-name>[inbetriebnahmedatum]</local-name>
            <parent-name>[DS3_charging_data.csv+]</parent-name>
            <remote-alias>inbetriebnahmedatum</remote-alias>
            <ordinal>19</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <object-id>[DS3_charging_data.csv_2E16DB31176F4722BAA93687A762B6B8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>breitengrad</remote-name>
            <remote-type>5</remote-type>
            <local-name>[breitengrad]</local-name>
            <parent-name>[DS3_charging_data.csv+]</parent-name>
            <remote-alias>breitengrad</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[DS3_charging_data.csv_2E16DB31176F4722BAA93687A762B6B8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>laengengrad</remote-name>
            <remote-type>5</remote-type>
            <local-name>[laengengrad]</local-name>
            <parent-name>[DS3_charging_data.csv+]</parent-name>
            <remote-alias>laengengrad</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[DS3_charging_data.csv_2E16DB31176F4722BAA93687A762B6B8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>uuid</remote-name>
            <remote-type>129</remote-type>
            <local-name>[uuid]</local-name>
            <parent-name>[DS3_charging_data.csv+]</parent-name>
            <remote-alias>uuid</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[DS3_charging_data.csv_2E16DB31176F4722BAA93687A762B6B8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[DS3_charging_data.csv+]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[DS3_charging_data.csv_2E16DB31176F4722BAA93687A762B6B8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>brand</remote-name>
            <remote-type>129</remote-type>
            <local-name>[brand]</local-name>
            <parent-name>[DS3_charging_data.csv+]</parent-name>
            <remote-alias>brand</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[DS3_charging_data.csv_2E16DB31176F4722BAA93687A762B6B8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>street</remote-name>
            <remote-type>129</remote-type>
            <local-name>[street]</local-name>
            <parent-name>[DS3_charging_data.csv+]</parent-name>
            <remote-alias>street</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[DS3_charging_data.csv_2E16DB31176F4722BAA93687A762B6B8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>house_number</remote-name>
            <remote-type>129</remote-type>
            <local-name>[house_number]</local-name>
            <parent-name>[DS3_charging_data.csv+]</parent-name>
            <remote-alias>house_number</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[DS3_charging_data.csv_2E16DB31176F4722BAA93687A762B6B8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>post_code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[post_code]</local-name>
            <parent-name>[DS3_charging_data.csv+]</parent-name>
            <remote-alias>post_code</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[DS3_charging_data.csv_2E16DB31176F4722BAA93687A762B6B8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>129</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[DS3_charging_data.csv+]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[DS3_charging_data.csv_2E16DB31176F4722BAA93687A762B6B8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[DS3_charging_data.csv+]</parent-name>
            <remote-alias>latitude</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[DS3_charging_data.csv_2E16DB31176F4722BAA93687A762B6B8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[DS3_charging_data.csv+]</parent-name>
            <remote-alias>longitude</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[DS3_charging_data.csv_2E16DB31176F4722BAA93687A762B6B8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>first_active</remote-name>
            <remote-type>129</remote-type>
            <local-name>[first_active]</local-name>
            <parent-name>[DS3_charging_data.csv+]</parent-name>
            <remote-alias>first_active</remote-alias>
            <ordinal>31</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[DS3_charging_data.csv_2E16DB31176F4722BAA93687A762B6B8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>openingtimes_json</remote-name>
            <remote-type>129</remote-type>
            <local-name>[openingtimes_json]</local-name>
            <parent-name>[DS3_charging_data.csv+]</parent-name>
            <remote-alias>openingtimes_json</remote-alias>
            <ordinal>32</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[DS3_charging_data.csv_2E16DB31176F4722BAA93687A762B6B8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Table Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Table Name]</local-name>
            <parent-name>[DS3_charging_data.csv+]</parent-name>
            <remote-alias>Table Name</remote-alias>
            <ordinal>33</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[DS3_charging_data.csv_2E16DB31176F4722BAA93687A762B6B8]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='AC and DC (w Gas)' datatype='string' name='[AC and DC (copy)_4343792277660188672]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF ISNULL([anschlussleistung]) THEN &quot;Gas Station&quot;&#10;ELSEIF [anschlussleistung] &lt; 50 THEN &quot;AC Charging&quot;&#10;ELSE &quot;DC Fast Charging&quot;&#10;END' />
      </column>
      <column caption='AC and DC' datatype='string' name='[Calculation_3650730516158357510]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [anschlussleistung] &lt; 50 THEN &apos;AC Charging&apos;&#10;ELSE &apos;DC Fast Chargning&apos;&#10;END' />
      </column>
      <column caption='DS3_charging_data.csv' datatype='table' name='[__tableau_internal_object_id__].[DS3_charging_data.csv_2E16DB31176F4722BAA93687A762B6B8]' role='measure' type='quantitative' />
      <column caption='Adresszusatz' datatype='string' name='[adresszusatz]' role='dimension' type='nominal' />
      <column caption='Anschlussleistung' datatype='real' name='[anschlussleistung]' role='measure' type='quantitative' />
      <column caption='Anzahl Ladepunkte' datatype='integer' name='[anzahl_ladepunkte]' role='measure' type='quantitative' />
      <column caption='Art Der Ladeeinrichung' datatype='string' name='[art_der_ladeeinrichung]' role='dimension' type='nominal' />
      <column caption='Betreiber' datatype='string' name='[betreiber]' role='dimension' type='nominal' />
      <column aggregation='Avg' caption='Breitengrad' datatype='real' name='[breitengrad]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Hausnummer' datatype='string' name='[hausnummer]' role='dimension' type='nominal' />
      <column caption='Inbetriebnahmedatum' datatype='date' name='[inbetriebnahmedatum]' role='dimension' type='ordinal' />
      <column caption='Kreis Kreisfreie Stadt' datatype='string' name='[kreis_kreisfreie_stadt]' role='dimension' type='nominal' />
      <column caption='Laengengrad' datatype='real' name='[laengengrad]' role='measure' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Ort' datatype='string' name='[ort]' role='dimension' type='nominal' />
      <column caption='P1 Kw' datatype='real' name='[p1_kw]' role='measure' type='quantitative' />
      <column caption='P2 Kw' datatype='real' name='[p2_kw]' role='measure' type='quantitative' />
      <column caption='P3 Kw' datatype='real' name='[p3_kw]' role='measure' type='quantitative' />
      <column caption='P4 Kw' datatype='real' name='[p4_kw]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Postleitzahl' datatype='integer' default-format='*00000' name='[postleitzahl]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column caption='Steckertypen1' datatype='string' name='[steckertypen1]' role='dimension' type='nominal' />
      <column caption='Steckertypen2' datatype='string' name='[steckertypen2]' role='dimension' type='nominal' />
      <column caption='Steckertypen3' datatype='string' name='[steckertypen3]' role='dimension' type='nominal' />
      <column caption='Steckertypen4' datatype='string' name='[steckertypen4]' role='dimension' type='nominal' />
      <column caption='Strasse' datatype='string' name='[strasse]' role='dimension' type='nominal' />
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Germany&quot;' />
        <semantic-value key='[ZipCode].[Name]' value='%null%' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <object-graph>
        <objects>
          <object caption='DS3_charging_data.csv' id='DS3_charging_data.csv_2E16DB31176F4722BAA93687A762B6B8'>
            <properties context=''>
              <relation all='true' name='DS3_charging_data.csv+' type='union'>
                <columns character-set='UTF-8' header='yes' locale='en' separator=','>
                  <column datatype='integer' name='F1' />
                  <column datatype='string' name='betreiber' />
                  <column datatype='string' name='art_der_ladeeinrichung' />
                  <column datatype='integer' name='anzahl_ladepunkte' />
                  <column datatype='real' name='anschlussleistung' />
                  <column datatype='string' name='steckertypen1' />
                  <column datatype='string' name='steckertypen2' />
                  <column datatype='string' name='steckertypen3' />
                  <column datatype='string' name='steckertypen4' />
                  <column datatype='real' name='p1_kw' />
                  <column datatype='real' name='p2_kw' />
                  <column datatype='real' name='p3_kw' />
                  <column datatype='real' name='p4_kw' />
                  <column datatype='string' name='kreis_kreisfreie_stadt' />
                  <column datatype='string' name='ort' />
                  <column datatype='integer' name='postleitzahl' />
                  <column datatype='string' name='strasse' />
                  <column datatype='string' name='hausnummer' />
                  <column datatype='string' name='adresszusatz' />
                  <column datatype='date' name='inbetriebnahmedatum' />
                  <column datatype='real' name='breitengrad' />
                  <column datatype='real' name='laengengrad' />
                  <column datatype='string' name='uuid' />
                  <column datatype='string' name='name' />
                  <column datatype='string' name='brand' />
                  <column datatype='string' name='street' />
                  <column datatype='string' name='house_number' />
                  <column datatype='integer' name='post_code' />
                  <column datatype='string' name='city' />
                  <column datatype='real' name='latitude' />
                  <column datatype='real' name='longitude' />
                  <column datatype='string' name='first_active' />
                  <column datatype='string' name='openingtimes_json' />
                  <column datatype='string' name='Table Name' />
                </columns>
                <relation connection='textscan.0cj4foh1yatolm1f8k55h0xpry29' name='DS3_charging_data.csv' table='[DS3_charging_data#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en' separator=','>
                    <column datatype='integer' name='F1' ordinal='0' />
                    <column datatype='string' name='betreiber' ordinal='1' />
                    <column datatype='string' name='art_der_ladeeinrichung' ordinal='2' />
                    <column datatype='integer' name='anzahl_ladepunkte' ordinal='3' />
                    <column datatype='real' name='anschlussleistung' ordinal='4' />
                    <column datatype='string' name='steckertypen1' ordinal='5' />
                    <column datatype='string' name='steckertypen2' ordinal='6' />
                    <column datatype='string' name='steckertypen3' ordinal='7' />
                    <column datatype='string' name='steckertypen4' ordinal='8' />
                    <column datatype='real' name='p1_kw' ordinal='9' />
                    <column datatype='real' name='p2_kw' ordinal='10' />
                    <column datatype='real' name='p3_kw' ordinal='11' />
                    <column datatype='real' name='p4_kw' ordinal='12' />
                    <column datatype='string' name='kreis_kreisfreie_stadt' ordinal='13' />
                    <column datatype='string' name='ort' ordinal='14' />
                    <column datatype='integer' name='postleitzahl' ordinal='15' />
                    <column datatype='string' name='strasse' ordinal='16' />
                    <column datatype='string' name='hausnummer' ordinal='17' />
                    <column datatype='string' name='adresszusatz' ordinal='18' />
                    <column datatype='date' name='inbetriebnahmedatum' ordinal='19' />
                    <column datatype='real' name='breitengrad' ordinal='20' />
                    <column datatype='real' name='laengengrad' ordinal='21' />
                  </columns>
                </relation>
                <relation connection='textscan.0cj4foh1yatolm1f8k55h0xpry29' name='DS5_GermanyGasStations.csv' table='[DS5_GermanyGasStations#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en' separator=','>
                    <column datatype='string' name='uuid' ordinal='0' />
                    <column datatype='string' name='name' ordinal='1' />
                    <column datatype='string' name='brand' ordinal='2' />
                    <column datatype='string' name='street' ordinal='3' />
                    <column datatype='string' name='house_number' ordinal='4' />
                    <column datatype='integer' name='post_code' ordinal='5' />
                    <column datatype='string' name='city' ordinal='6' />
                    <column datatype='real' name='latitude' ordinal='7' />
                    <column datatype='real' name='longitude' ordinal='8' />
                    <column datatype='string' name='first_active' ordinal='9' />
                    <column datatype='string' name='openingtimes_json' ordinal='10' />
                  </columns>
                </relation>
              </relation>
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='airports+ (lavender_notebooks)' inline='true' name='federated.0to5re41omz4tb1bzsjza0u5by2q' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='data-analytics-course-2.c8g8r1deus2v.eu-central-1.rds.amazonaws.com' name='postgres.0ux6t301bfaw0w1dv7hyf0u03ool'>
            <connection authentication='username-password' class='postgres' dbname='lavender_notebooks' one-time-sql='' port='5432' server='data-analytics-course-2.c8g8r1deus2v.eu-central-1.rds.amazonaws.com' username='muhammadhuzefaahmed' />
          </named-connection>
        </named-connections>
        <relation type='collection'>
          <relation connection='postgres.0ux6t301bfaw0w1dv7hyf0u03ool' name='ds8_new_el_car_sales_share_in_germany' table='[double_trouble].[ds8_new_el_car_sales_share_in_germany]' type='table' />
          <relation connection='postgres.0ux6t301bfaw0w1dv7hyf0u03ool' name='ds9_sales_and_market_share_final' table='[double_trouble].[ds9_sales_and_market_share_final]' type='table' />
        </relation>
        <cols>
          <map key='[all_electric_cars_sold]' value='[ds8_new_el_car_sales_share_in_germany].[all_electric_cars_sold]' />
          <map key='[brand]' value='[ds9_sales_and_market_share_final].[brand]' />
          <map key='[eu_bev_share]' value='[ds9_sales_and_market_share_final].[eu_bev_share]' />
          <map key='[europe_market_sales_bev]' value='[ds9_sales_and_market_share_final].[europe_market_sales_bev]' />
          <map key='[germany_bev_share]' value='[ds9_sales_and_market_share_final].[germany_bev_share]' />
          <map key='[germany_market_sales_bev]' value='[ds9_sales_and_market_share_final].[germany_market_sales_bev]' />
          <map key='[germany_total_el_cars_sales]' value='[ds9_sales_and_market_share_final].[germany_total_el_cars_sales]' />
          <map key='[global_bev_share]' value='[ds9_sales_and_market_share_final].[global_bev_share]' />
          <map key='[global_market_sales]' value='[ds9_sales_and_market_share_final].[global_market_sales]' />
          <map key='[global_market_sales_bev]' value='[ds9_sales_and_market_share_final].[global_market_sales_bev]' />
          <map key='[percent_share_electric_cars]' value='[ds8_new_el_car_sales_share_in_germany].[percent_share_electric_cars]' />
          <map key='[total_german_car_market]' value='[ds8_new_el_car_sales_share_in_germany].[total_german_car_market]' />
          <map key='[year (ds8_new_el_car_sales_share_in_germany)]' value='[ds8_new_el_car_sales_share_in_germany].[year]' />
          <map key='[year]' value='[ds9_sales_and_market_share_final].[year]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[year (ds8_new_el_car_sales_share_in_germany)]</local-name>
            <parent-name>[ds8_new_el_car_sales_share_in_germany]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <object-id>[ds8_new_el_car_sales_share_in_germany (double_trouble.ds8_new_el_car_sales_share_in_germany)_6B47D953F8A94F1087C5D64CC4122AF1]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_german_car_market</remote-name>
            <remote-type>3</remote-type>
            <local-name>[total_german_car_market]</local-name>
            <parent-name>[ds8_new_el_car_sales_share_in_germany]</parent-name>
            <remote-alias>total_german_car_market</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <object-id>[ds8_new_el_car_sales_share_in_germany (double_trouble.ds8_new_el_car_sales_share_in_germany)_6B47D953F8A94F1087C5D64CC4122AF1]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>all_electric_cars_sold</remote-name>
            <remote-type>3</remote-type>
            <local-name>[all_electric_cars_sold]</local-name>
            <parent-name>[ds8_new_el_car_sales_share_in_germany]</parent-name>
            <remote-alias>all_electric_cars_sold</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <object-id>[ds8_new_el_car_sales_share_in_germany (double_trouble.ds8_new_el_car_sales_share_in_germany)_6B47D953F8A94F1087C5D64CC4122AF1]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>percent_share_electric_cars</remote-name>
            <remote-type>5</remote-type>
            <local-name>[percent_share_electric_cars]</local-name>
            <parent-name>[ds8_new_el_car_sales_share_in_germany]</parent-name>
            <remote-alias>percent_share_electric_cars</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>8</precision>
            <contains-null>true</contains-null>
            <object-id>[ds8_new_el_car_sales_share_in_germany (double_trouble.ds8_new_el_car_sales_share_in_germany)_6B47D953F8A94F1087C5D64CC4122AF1]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[ds9_sales_and_market_share_final]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <object-id>[ds9_sales_and_market_share_final (double_trouble.ds9_sales_and_market_share_final)_2551BBCEACF8449C8CF0A9154C764A43]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>brand</remote-name>
            <remote-type>129</remote-type>
            <local-name>[brand]</local-name>
            <parent-name>[ds9_sales_and_market_share_final]</parent-name>
            <remote-alias>brand</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[ds9_sales_and_market_share_final (double_trouble.ds9_sales_and_market_share_final)_2551BBCEACF8449C8CF0A9154C764A43]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>global_bev_share</remote-name>
            <remote-type>5</remote-type>
            <local-name>[global_bev_share]</local-name>
            <parent-name>[ds9_sales_and_market_share_final]</parent-name>
            <remote-alias>global_bev_share</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>8</precision>
            <contains-null>true</contains-null>
            <object-id>[ds9_sales_and_market_share_final (double_trouble.ds9_sales_and_market_share_final)_2551BBCEACF8449C8CF0A9154C764A43]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>eu_bev_share</remote-name>
            <remote-type>5</remote-type>
            <local-name>[eu_bev_share]</local-name>
            <parent-name>[ds9_sales_and_market_share_final]</parent-name>
            <remote-alias>eu_bev_share</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>8</precision>
            <contains-null>true</contains-null>
            <object-id>[ds9_sales_and_market_share_final (double_trouble.ds9_sales_and_market_share_final)_2551BBCEACF8449C8CF0A9154C764A43]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>germany_bev_share</remote-name>
            <remote-type>3</remote-type>
            <local-name>[germany_bev_share]</local-name>
            <parent-name>[ds9_sales_and_market_share_final]</parent-name>
            <remote-alias>germany_bev_share</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <object-id>[ds9_sales_and_market_share_final (double_trouble.ds9_sales_and_market_share_final)_2551BBCEACF8449C8CF0A9154C764A43]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>global_market_sales</remote-name>
            <remote-type>3</remote-type>
            <local-name>[global_market_sales]</local-name>
            <parent-name>[ds9_sales_and_market_share_final]</parent-name>
            <remote-alias>global_market_sales</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <object-id>[ds9_sales_and_market_share_final (double_trouble.ds9_sales_and_market_share_final)_2551BBCEACF8449C8CF0A9154C764A43]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>global_market_sales_bev</remote-name>
            <remote-type>3</remote-type>
            <local-name>[global_market_sales_bev]</local-name>
            <parent-name>[ds9_sales_and_market_share_final]</parent-name>
            <remote-alias>global_market_sales_bev</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <object-id>[ds9_sales_and_market_share_final (double_trouble.ds9_sales_and_market_share_final)_2551BBCEACF8449C8CF0A9154C764A43]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>europe_market_sales_bev</remote-name>
            <remote-type>3</remote-type>
            <local-name>[europe_market_sales_bev]</local-name>
            <parent-name>[ds9_sales_and_market_share_final]</parent-name>
            <remote-alias>europe_market_sales_bev</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <object-id>[ds9_sales_and_market_share_final (double_trouble.ds9_sales_and_market_share_final)_2551BBCEACF8449C8CF0A9154C764A43]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>germany_market_sales_bev</remote-name>
            <remote-type>3</remote-type>
            <local-name>[germany_market_sales_bev]</local-name>
            <parent-name>[ds9_sales_and_market_share_final]</parent-name>
            <remote-alias>germany_market_sales_bev</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <object-id>[ds9_sales_and_market_share_final (double_trouble.ds9_sales_and_market_share_final)_2551BBCEACF8449C8CF0A9154C764A43]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>germany_total_el_cars_sales</remote-name>
            <remote-type>3</remote-type>
            <local-name>[germany_total_el_cars_sales]</local-name>
            <parent-name>[ds9_sales_and_market_share_final]</parent-name>
            <remote-alias>germany_total_el_cars_sales</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <object-id>[ds9_sales_and_market_share_final (double_trouble.ds9_sales_and_market_share_final)_2551BBCEACF8449C8CF0A9154C764A43]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='ds8_new_el_car_sales_share_in_germany' datatype='table' name='[__tableau_internal_object_id__].[ds8_new_el_car_sales_share_in_germany (double_trouble.ds8_new_el_car_sales_share_in_germany)_6B47D953F8A94F1087C5D64CC4122AF1]' role='measure' type='quantitative' />
      <column caption='ds9_sales_and_market_share_final' datatype='table' name='[__tableau_internal_object_id__].[ds9_sales_and_market_share_final (double_trouble.ds9_sales_and_market_share_final)_2551BBCEACF8449C8CF0A9154C764A43]' role='measure' type='quantitative' />
      <column caption='All Electric Cars Sold' datatype='integer' name='[all_electric_cars_sold]' role='measure' type='quantitative' />
      <column caption='Brand' datatype='string' name='[brand]' role='dimension' type='nominal' />
      <column caption='Eu Bev Share' datatype='real' name='[eu_bev_share]' role='measure' type='quantitative' />
      <column caption='Europe Market Sales Bev' datatype='integer' name='[europe_market_sales_bev]' role='measure' type='quantitative' />
      <column caption='Germany Bev Share' datatype='integer' name='[germany_bev_share]' role='measure' type='quantitative' />
      <column caption='Germany Market Sales Bev' datatype='integer' name='[germany_market_sales_bev]' role='measure' type='quantitative' />
      <column caption='Germany Total El Cars Sales' datatype='integer' name='[germany_total_el_cars_sales]' role='measure' type='quantitative' />
      <column caption='Global Bev Share' datatype='real' name='[global_bev_share]' role='measure' type='quantitative' />
      <column caption='Global Market Sales' datatype='integer' name='[global_market_sales]' role='measure' type='quantitative' />
      <column caption='Global Market Sales Bev' datatype='integer' name='[global_market_sales_bev]' role='measure' type='quantitative' />
      <column caption='Percent Share Electric Cars' datatype='real' name='[percent_share_electric_cars]' role='measure' type='quantitative' />
      <column caption='Total German Car Market' datatype='integer' name='[total_german_car_market]' role='measure' type='quantitative' />
      <column caption='Year (Ds8 New El Car Sales Share In Germany)' datatype='integer' name='[year (ds8_new_el_car_sales_share_in_germany)]' role='dimension' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[europe_market_sales_bev]' derivation='Sum' name='[sum:europe_market_sales_bev:qk]' pivot='key' type='quantitative' />
      <column-instance column='[germany_market_sales_bev]' derivation='Sum' name='[sum:germany_market_sales_bev:qk]' pivot='key' type='quantitative' />
      <column-instance column='[global_market_sales]' derivation='Sum' name='[sum:global_market_sales:qk]' pivot='key' type='quantitative' />
      <column-instance column='[global_market_sales_bev]' derivation='Sum' name='[sum:global_market_sales_bev:qk]' pivot='key' type='quantitative' />
      <drill-paths>
        <drill-path name='country, city' />
      </drill-paths>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#54a77b'>
              <bucket>&quot;[federated.0to5re41omz4tb1bzsjza0u5by2q].[sum:europe_market_sales_bev:qk]&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;[federated.0to5re41omz4tb1bzsjza0u5by2q].[sum:germany_market_sales_bev:qk]&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;[federated.0to5re41omz4tb1bzsjza0u5by2q].[sum:global_market_sales:qk]&quot;</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>&quot;[federated.0to5re41omz4tb1bzsjza0u5by2q].[sum:global_market_sales_bev:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <object-graph>
        <objects>
          <object caption='ds8_new_el_car_sales_share_in_germany' id='ds8_new_el_car_sales_share_in_germany (double_trouble.ds8_new_el_car_sales_share_in_germany)_6B47D953F8A94F1087C5D64CC4122AF1'>
            <properties context=''>
              <relation connection='postgres.0ux6t301bfaw0w1dv7hyf0u03ool' name='ds8_new_el_car_sales_share_in_germany' table='[double_trouble].[ds8_new_el_car_sales_share_in_germany]' type='table' />
            </properties>
          </object>
          <object caption='ds9_sales_and_market_share_final' id='ds9_sales_and_market_share_final (double_trouble.ds9_sales_and_market_share_final)_2551BBCEACF8449C8CF0A9154C764A43'>
            <properties context=''>
              <relation connection='postgres.0ux6t301bfaw0w1dv7hyf0u03ool' name='ds9_sales_and_market_share_final' table='[double_trouble].[ds9_sales_and_market_share_final]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[year (ds8_new_el_car_sales_share_in_germany)]' />
              <expression op='[year]' />
            </expression>
            <first-end-point object-id='ds8_new_el_car_sales_share_in_germany (double_trouble.ds8_new_el_car_sales_share_in_germany)_6B47D953F8A94F1087C5D64CC4122AF1' />
            <second-end-point object-id='ds9_sales_and_market_share_final (double_trouble.ds9_sales_and_market_share_final)_2551BBCEACF8449C8CF0A9154C764A43' />
          </relationship>
        </relationships>
      </object-graph>
    </datasource>
    <datasource caption='ds2_iea_global_ev_data (double_trouble.ds2_iea_global_ev_data) (lavender_notebooks)' inline='true' name='federated.0kwb95s04avje60zm1d4j0f9vovi' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='data-analytics-course-2.c8g8r1deus2v.eu-central-1.rds.amazonaws.com' name='postgres.0krpibk07nfwm3139didy0h03qzi'>
            <connection authentication='username-password' class='postgres' dbname='lavender_notebooks' one-time-sql='' port='5432' server='data-analytics-course-2.c8g8r1deus2v.eu-central-1.rds.amazonaws.com' username='muhammadhuzefaahmed' />
          </named-connection>
        </named-connections>
        <relation connection='postgres.0krpibk07nfwm3139didy0h03qzi' name='ds2_iea_global_ev_data' table='[double_trouble].[ds2_iea_global_ev_data]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[region]</local-name>
            <parent-name>[ds2_iea_global_ev_data]</parent-name>
            <remote-alias>region</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[ds2_iea_global_ev_data (double_trouble.ds2_iea_global_ev_data)_90A20AB5222A449085D817D7ACEC8B0C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[category]</local-name>
            <parent-name>[ds2_iea_global_ev_data]</parent-name>
            <remote-alias>category</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[ds2_iea_global_ev_data (double_trouble.ds2_iea_global_ev_data)_90A20AB5222A449085D817D7ACEC8B0C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>parameter</remote-name>
            <remote-type>129</remote-type>
            <local-name>[parameter]</local-name>
            <parent-name>[ds2_iea_global_ev_data]</parent-name>
            <remote-alias>parameter</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[ds2_iea_global_ev_data (double_trouble.ds2_iea_global_ev_data)_90A20AB5222A449085D817D7ACEC8B0C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>mode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[mode]</local-name>
            <parent-name>[ds2_iea_global_ev_data]</parent-name>
            <remote-alias>mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[ds2_iea_global_ev_data (double_trouble.ds2_iea_global_ev_data)_90A20AB5222A449085D817D7ACEC8B0C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>powertrain</remote-name>
            <remote-type>129</remote-type>
            <local-name>[powertrain]</local-name>
            <parent-name>[ds2_iea_global_ev_data]</parent-name>
            <remote-alias>powertrain</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[ds2_iea_global_ev_data (double_trouble.ds2_iea_global_ev_data)_90A20AB5222A449085D817D7ACEC8B0C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[ds2_iea_global_ev_data]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <object-id>[ds2_iea_global_ev_data (double_trouble.ds2_iea_global_ev_data)_90A20AB5222A449085D817D7ACEC8B0C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>unit</remote-name>
            <remote-type>129</remote-type>
            <local-name>[unit]</local-name>
            <parent-name>[ds2_iea_global_ev_data]</parent-name>
            <remote-alias>unit</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[ds2_iea_global_ev_data (double_trouble.ds2_iea_global_ev_data)_90A20AB5222A449085D817D7ACEC8B0C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[value]</local-name>
            <parent-name>[ds2_iea_global_ev_data]</parent-name>
            <remote-alias>value</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>8</precision>
            <contains-null>true</contains-null>
            <object-id>[ds2_iea_global_ev_data (double_trouble.ds2_iea_global_ev_data)_90A20AB5222A449085D817D7ACEC8B0C]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='ds2_iea_global_ev_data' datatype='table' name='[__tableau_internal_object_id__].[ds2_iea_global_ev_data (double_trouble.ds2_iea_global_ev_data)_90A20AB5222A449085D817D7ACEC8B0C]' role='measure' type='quantitative' />
      <column caption='Category' datatype='string' name='[category]' role='dimension' type='nominal' />
      <column caption='Mode' datatype='string' name='[mode]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;EV&quot;' value='No. of charging stations (Germany)' />
        </aliases>
      </column>
      <column caption='Parameter' datatype='string' name='[parameter]' role='dimension' type='nominal' />
      <column caption='Powertrain' datatype='string' name='[powertrain]' role='dimension' type='nominal' />
      <column caption='Region' datatype='string' name='[region]' role='dimension' type='nominal' />
      <column caption='Unit' datatype='string' name='[unit]' role='dimension' type='nominal' />
      <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
      <column-instance column='[mode]' derivation='None' name='[none:mode:nk]' pivot='key' type='nominal' />
      <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
      <group hidden='true' name='[Exclusions (Mode,Year)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:mode:nk]' />
          <groupfilter function='level-members' level='[none:year:ok]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:mode:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Buses&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vans&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Trucks&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;EV&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cars&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <object-graph>
        <objects>
          <object caption='ds2_iea_global_ev_data' id='ds2_iea_global_ev_data (double_trouble.ds2_iea_global_ev_data)_90A20AB5222A449085D817D7ACEC8B0C'>
            <properties context=''>
              <relation connection='postgres.0krpibk07nfwm3139didy0h03qzi' name='ds2_iea_global_ev_data' table='[double_trouble].[ds2_iea_global_ev_data]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <datasource-relationships>
    <datasource-dependencies datasource='federated.086k1gm10z1nmp19scxzo0mo5d3a'>
      <column-instance column='[ort]' derivation='None' name='[none:ort:nk]' pivot='key' type='nominal' />
      <column-instance column='[postleitzahl]' derivation='None' name='[none:postleitzahl:ok]' pivot='key' type='ordinal' />
      <column caption='Ort' datatype='string' name='[ort]' role='dimension' type='nominal' />
      <column aggregation='Sum' caption='Postleitzahl' datatype='integer' default-format='*00000' name='[postleitzahl]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
    </datasource-dependencies>
    <datasource-dependencies datasource='federated.0cwf5am01d93k414a60rr195vtc5'>
      <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
      <column-instance column='[post_code]' derivation='None' name='[none:post_code:ok]' pivot='key' type='ordinal' />
      <column aggregation='Sum' caption='Post Code' datatype='integer' datatype-customized='true' default-format='*00000' name='[post_code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
    </datasource-dependencies>
    <datasource-relationship source='federated.086k1gm10z1nmp19scxzo0mo5d3a' target='federated.0cwf5am01d93k414a60rr195vtc5'>
      <column-mapping>
        <map key='[federated.086k1gm10z1nmp19scxzo0mo5d3a].[none:ort:nk]' value='[federated.0cwf5am01d93k414a60rr195vtc5].[none:city:nk]' />
        <map key='[federated.086k1gm10z1nmp19scxzo0mo5d3a].[none:postleitzahl:ok]' value='[federated.0cwf5am01d93k414a60rr195vtc5].[none:post_code:ok]' />
      </column-mapping>
    </datasource-relationship>
  </datasource-relationships>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='BEV Modes over time visual'>
      <table>
        <view>
          <datasources>
            <datasource caption='ds2_iea_global_ev_data (double_trouble.ds2_iea_global_ev_data) (lavender_notebooks)' name='federated.0kwb95s04avje60zm1d4j0f9vovi' />
          </datasources>
          <datasource-dependencies datasource='federated.0kwb95s04avje60zm1d4j0f9vovi'>
            <column caption='Mode' datatype='string' name='[mode]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;EV&quot;' value='No. of charging stations (Germany)' />
              </aliases>
            </column>
            <column-instance column='[mode]' derivation='None' name='[none:mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Region' datatype='string' name='[region]' role='dimension' type='nominal' />
            <column-instance column='[value]' derivation='Sum' name='[sum:value:qk]' pivot='key' type='quantitative' />
            <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kwb95s04avje60zm1d4j0f9vovi].[Exclusions (Mode,Year)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:mode:nk]' />
                <groupfilter function='level-members' level='[none:year:ok]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:mode:nk]' member='&quot;EV&quot;' />
                <groupfilter function='member' level='[none:year:ok]' member='2025' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0kwb95s04avje60zm1d4j0f9vovi].[none:mode:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:mode:nk]' member='&quot;Buses&quot;' />
              <groupfilter function='member' level='[none:mode:nk]' member='&quot;Cars&quot;' />
              <groupfilter function='member' level='[none:mode:nk]' member='&quot;Trucks&quot;' />
              <groupfilter function='member' level='[none:mode:nk]' member='&quot;Vans&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0kwb95s04avje60zm1d4j0f9vovi].[none:region:nk]'>
            <groupfilter function='member' level='[none:region:nk]' member='&quot;Germany&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0kwb95s04avje60zm1d4j0f9vovi].[none:year:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:year:ok]' member='2018' />
              <groupfilter function='member' level='[none:year:ok]' member='2019' />
              <groupfilter function='member' level='[none:year:ok]' member='2020' />
              <groupfilter function='member' level='[none:year:ok]' member='2021' />
              <groupfilter function='member' level='[none:year:ok]' member='2022' />
              <groupfilter function='member' level='[none:year:ok]' member='2023' />
              <groupfilter function='member' level='[none:year:ok]' member='2025' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0kwb95s04avje60zm1d4j0f9vovi].[none:year:ok]</column>
            <column>[federated.0kwb95s04avje60zm1d4j0f9vovi].[Exclusions (Mode,Year)]</column>
            <column>[federated.0kwb95s04avje60zm1d4j0f9vovi].[none:mode:nk]</column>
            <column>[federated.0kwb95s04avje60zm1d4j0f9vovi].[none:region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0kwb95s04avje60zm1d4j0f9vovi].[sum:value:qk]' field-type='quantitative' max='3500000.0' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0kwb95s04avje60zm1d4j0f9vovi].[none:year:ok]' value='73' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0kwb95s04avje60zm1d4j0f9vovi].[none:mode:nk]' value='52' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0kwb95s04avje60zm1d4j0f9vovi].[sum:value:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#d5e1e4</color>
                <color>#bcd2d8</color>
                <color>#a4c3cc</color>
                <color>#8db5c0</color>
                <color>#79a6b4</color>
                <color>#6599a8</color>
                <color>#548b9c</color>
                <color>#447e90</color>
                <color>#357284</color>
                <color>#296678</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0kwb95s04avje60zm1d4j0f9vovi].[none:mode:nk]' />
              <text column='[federated.0kwb95s04avje60zm1d4j0f9vovi].[none:mode:nk]' />
              <text column='[federated.0kwb95s04avje60zm1d4j0f9vovi].[sum:value:qk]' />
              <lod column='[federated.0kwb95s04avje60zm1d4j0f9vovi].[none:mode:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-markers-mode' value='all' />
                <format attr='mark-transparency' value='142' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0kwb95s04avje60zm1d4j0f9vovi].[sum:value:qk]</rows>
        <cols>[federated.0kwb95s04avje60zm1d4j0f9vovi].[none:year:ok]</cols>
      </table>
      <simple-id uuid='{C2DD1267-91DD-4B3C-8B9F-10764DA36937}' />
    </worksheet>
    <worksheet name='BEV/non-BEV Sales 2024 in Germany'>
      <table>
        <view>
          <datasources>
            <datasource caption='ds7_e_car_sales (double_trouble.ds7_e_car_sales) (lavender_notebooks)' name='federated.1vyi95b0q8yknk13dw5u81htbwnw' />
          </datasources>
          <datasource-dependencies datasource='federated.1vyi95b0q8yknk13dw5u81htbwnw'>
            <column caption='All Sales' datatype='integer' datatype-customized='true' name='[all_sales]' role='dimension' type='ordinal' />
            <column caption='Bev Sales' datatype='integer' datatype-customized='true' name='[bev_sales]' role='dimension' type='ordinal' />
            <column caption='Brand' datatype='string' name='[brand]' role='dimension' type='nominal' />
            <column caption='Non Bev Sales' datatype='integer' datatype-customized='true' name='[non_bev_sales]' role='dimension' type='ordinal' />
            <column-instance column='[bev_sales]' derivation='None' name='[none:bev_sales:ok]' pivot='key' type='ordinal' />
            <column-instance column='[brand]' derivation='None' name='[none:brand:nk]' pivot='key' type='nominal' />
            <column-instance column='[all_sales]' derivation='Sum' name='[sum:all_sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[bev_sales]' derivation='Sum' name='[sum:bev_sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[non_bev_sales]' derivation='Sum' name='[sum:non_bev_sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vyi95b0q8yknk13dw5u81htbwnw].[Exclusions (Bev Sales,Brand)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:bev_sales:ok]' />
                <groupfilter function='level-members' level='[none:brand:nk]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:bev_sales:ok]' member='380609' />
                <groupfilter function='member' level='[none:brand:nk]' member='&quot;TOTAL MARKET&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1vyi95b0q8yknk13dw5u81htbwnw].[none:brand:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;VOLKSWAGEN&quot;</bucket>
              <bucket>&quot;BMW&quot;</bucket>
              <bucket>&quot;TESLA&quot;</bucket>
              <bucket>&quot;MERCEDES-BENZ&quot;</bucket>
              <bucket>&quot;SKODA&quot;</bucket>
              <bucket>&quot;AUDI&quot;</bucket>
              <bucket>&quot;SEAT&quot;</bucket>
              <bucket>&quot;HYUNDAI&quot;</bucket>
              <bucket>&quot;MG&quot;</bucket>
              <bucket>&quot;VOLVO&quot;</bucket>
              <bucket>&quot;SMART&quot;</bucket>
              <bucket>&quot;KIA&quot;</bucket>
              <bucket>&quot;MINI&quot;</bucket>
              <bucket>&quot;FIAT&quot;</bucket>
              <bucket>&quot;OPEL&quot;</bucket>
              <bucket>&quot;PORSCHE&quot;</bucket>
              <bucket>&quot;RENAULT&quot;</bucket>
              <bucket>&quot;FORD&quot;</bucket>
              <bucket>&quot;DACIA&quot;</bucket>
              <bucket>&quot;PEUGEOT&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1vyi95b0q8yknk13dw5u81htbwnw].[Exclusions (Bev Sales,Brand)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1vyi95b0q8yknk13dw5u81htbwnw].[sum:bev_sales:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1vyi95b0q8yknk13dw5u81htbwnw].[none:bev_sales:ok]' />
              <lod column='[federated.1vyi95b0q8yknk13dw5u81htbwnw].[sum:non_bev_sales:qk]' />
              <color column='[federated.1vyi95b0q8yknk13dw5u81htbwnw].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1vyi95b0q8yknk13dw5u81htbwnw].[sum:all_sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1vyi95b0q8yknk13dw5u81htbwnw].[none:bev_sales:ok]' />
              <lod column='[federated.1vyi95b0q8yknk13dw5u81htbwnw].[sum:non_bev_sales:qk]' />
              <color column='[federated.1vyi95b0q8yknk13dw5u81htbwnw].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1vyi95b0q8yknk13dw5u81htbwnw].[sum:bev_sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1vyi95b0q8yknk13dw5u81htbwnw].[none:bev_sales:ok]' />
              <lod column='[federated.1vyi95b0q8yknk13dw5u81htbwnw].[sum:non_bev_sales:qk]' />
              <color column='[federated.1vyi95b0q8yknk13dw5u81htbwnw].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1vyi95b0q8yknk13dw5u81htbwnw].[sum:all_sales:qk] + [federated.1vyi95b0q8yknk13dw5u81htbwnw].[sum:bev_sales:qk])</rows>
        <cols>[federated.1vyi95b0q8yknk13dw5u81htbwnw].[none:brand:nk]</cols>
      </table>
      <simple-id uuid='{424E2D49-8739-4A0B-B427-225E6BA47D74}' />
    </worksheet>
    <worksheet name='Charging station prices'>
      <table>
        <view>
          <datasources>
            <datasource caption='ds6_charging_stations_prices (double_trouble.ds6_charging_stations_prices) (lavender_notebooks)' name='federated.12am53r0iui4kf11r918r1n17n20' />
          </datasources>
          <datasource-dependencies datasource='federated.12am53r0iui4kf11r918r1n17n20'>
            <column datatype='string' name='[Charging Speed (kW)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Charging Station Type]' role='dimension' type='nominal' />
            <column datatype='string' name='[Price Range (€/kWh)]' role='dimension' type='nominal' />
            <column-instance column='[Charging Speed (kW)]' derivation='None' name='[none:Charging Speed (kW):nk]' pivot='key' type='nominal' />
            <column-instance column='[Charging Station Type]' derivation='None' name='[none:Charging Station Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Price Range (€/kWh)]' derivation='None' name='[none:Price Range (€/kWh):nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='518' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.12am53r0iui4kf11r918r1n17n20].[none:Price Range (€/kWh):nk]' />
              <text column='[federated.12am53r0iui4kf11r918r1n17n20].[none:Price Range (€/kWh):nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.12am53r0iui4kf11r918r1n17n20].[none:Charging Station Type:nk] / [federated.12am53r0iui4kf11r918r1n17n20].[none:Charging Speed (kW):nk])</rows>
        <cols />
      </table>
      <simple-id uuid='{2982F22C-2E94-420A-91B6-648A477453EF}' />
    </worksheet>
    <worksheet name='Charging station prices20-24'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Charging Station Prices from 2020 till 2024</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ds10_chargingprice (double_trouble.ds10_chargingprice) (lavender_notebooks)' name='federated.14xasa601bf0p71gikjyg0ojtaz3' />
          </datasources>
          <datasource-dependencies datasource='federated.14xasa601bf0p71gikjyg0ojtaz3'>
            <column caption='Calc Avg Eur Price Kw' datatype='real' name='[calc_avg_eur_price_kw]' role='measure' type='quantitative' />
            <column caption='Charging Station Type' datatype='string' name='[charging_station_type]' role='dimension' type='nominal' />
            <column-instance column='[charging_station_type]' derivation='None' name='[none:charging_station_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[calc_avg_eur_price_kw]' derivation='Sum' name='[sum:calc_avg_eur_price_kw:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.14xasa601bf0p71gikjyg0ojtaz3].[none:charging_station_type:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:charging_station_type:nk]' member='&quot;Fast Charging&quot;' />
              <groupfilter function='member' level='[none:charging_station_type:nk]' member='&quot;Standard Charging&quot;' />
              <groupfilter function='member' level='[none:charging_station_type:nk]' member='&quot;Ultra-Fast Charging&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.14xasa601bf0p71gikjyg0ojtaz3].[none:charging_station_type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.14xasa601bf0p71gikjyg0ojtaz3].[sum:calc_avg_eur_price_kw:qk]' scope='rows' value='Avg Price (EUR/Kw)' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' value='518' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.14xasa601bf0p71gikjyg0ojtaz3].[sum:calc_avg_eur_price_kw:qk]' value='0' />
            <format attr='text-format' field='[federated.14xasa601bf0p71gikjyg0ojtaz3].[sum:calc_avg_eur_price_kw:qk]' value='N' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.14xasa601bf0p71gikjyg0ojtaz3].[sum:calc_avg_eur_price_kw:qk]' value='true' />
            <format attr='break-on-special' field='[federated.14xasa601bf0p71gikjyg0ojtaz3].[sum:calc_avg_eur_price_kw:qk]' value='true' />
            <format attr='show-null-value-warning' field='[federated.14xasa601bf0p71gikjyg0ojtaz3].[sum:calc_avg_eur_price_kw:qk]' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.14xasa601bf0p71gikjyg0ojtaz3].[none:charging_station_type:nk]' />
              <text column='[federated.14xasa601bf0p71gikjyg0ojtaz3].[sum:calc_avg_eur_price_kw:qk]' />
              <lod column='[federated.14xasa601bf0p71gikjyg0ojtaz3].[none:charging_station_type:nk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>Æ&#10;</run>
                <run><![CDATA[<[federated.14xasa601bf0p71gikjyg0ojtaz3].[sum:calc_avg_eur_price_kw:qk]>]]></run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='1.3073480129241943' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.14xasa601bf0p71gikjyg0ojtaz3].[sum:calc_avg_eur_price_kw:qk]</rows>
        <cols>[federated.14xasa601bf0p71gikjyg0ojtaz3].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{0A2FFCF2-C6A1-4DFC-86E4-4459C45191AF}' />
    </worksheet>
    <worksheet name='DS1-Scatter-Battery/KM'>
      <layout-options>
        <title>
          <formatted-text>
            <run>EVs Battery Size and Range relation</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ds1_ev_cars1 (double_trouble.ds1_ev_cars1) (lavender_notebooks)' name='federated.06ad92g138o9vi16zgmyt0k9zjql' />
          </datasources>
          <datasource-dependencies datasource='federated.06ad92g138o9vi16zgmyt0k9zjql'>
            <column datatype='string' name='[Brand Name (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[brand_name]' new-bin='true'>
                <bin default-name='false' value='&quot;BMW Group&quot;'>
                  <value>&quot;BMW&quot;</value>
                  <value>&quot;Mini&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Geely Group (China)&quot;'>
                  <value>&quot;Lotus&quot;</value>
                  <value>&quot;Polestar&quot;</value>
                  <value>&quot;Volvo&quot;</value>
                  <value>&quot;Zeekr&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Hyundai Motor Group&quot;'>
                  <value>&quot;Genesis&quot;</value>
                  <value>&quot;Hyundai&quot;</value>
                  <value>&quot;Kia&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Mercedes-Benz Group&quot;'>
                  <value>&quot;Mercedes&quot;</value>
                  <value>&quot;Smart&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Nissan, Renault&quot;'>
                  <value>&quot;Nissan&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Other Chinese EV Brands&quot;'>
                  <value>&quot;Aiways&quot;</value>
                  <value>&quot;BYD&quot;</value>
                  <value>&quot;Maxus&quot;</value>
                  <value>&quot;MG&quot;</value>
                  <value>&quot;NIO&quot;</value>
                  <value>&quot;ORA&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Others&quot;'>
                  <value>&quot;Elaris&quot;</value>
                  <value>&quot;Fisker&quot;</value>
                  <value>&quot;Lucid&quot;</value>
                  <value>&quot;SsangYong&quot;</value>
                  <value>&quot;Subaru&quot;</value>
                  <value>&quot;VinFast&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Renault Group&quot;'>
                  <value>&quot;Dacia&quot;</value>
                  <value>&quot;Renault&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Stellantis&quot;'>
                  <value>&quot;Abarth&quot;</value>
                  <value>&quot;Citroen&quot;</value>
                  <value>&quot;DS&quot;</value>
                  <value>&quot;Fiat&quot;</value>
                  <value>&quot;Jeep&quot;</value>
                  <value>&quot;Opel&quot;</value>
                  <value>&quot;Peugeot&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Toyota Group&quot;'>
                  <value>&quot;Lexus&quot;</value>
                  <value>&quot;Toyota&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;VW Group&quot;'>
                  <value>&quot;Audi&quot;</value>
                  <value>&quot;CUPRA&quot;</value>
                  <value>&quot;Porsche&quot;</value>
                  <value>&quot;Skoda&quot;</value>
                  <value>&quot;Volkswagen&quot;</value>
                </bin>
              </calculation>
            </column>
            <column-instance column='[brand_name]' derivation='Attribute' name='[attr:brand_name:nk]' pivot='key' type='nominal' />
            <column caption='Battery' datatype='real' name='[battery]' role='measure' type='quantitative' />
            <column caption='Brand Name' datatype='string' name='[brand_name]' role='dimension' type='nominal' />
            <column caption='Car Name' datatype='string' name='[car_name]' role='dimension' type='nominal' />
            <column-instance column='[brand_name]' derivation='None' name='[none:brand_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[car_name]' derivation='None' name='[none:car_name:nk]' pivot='key' type='nominal' />
            <column caption='Ranges Km' datatype='real' name='[ranges_km]' role='measure' type='quantitative' />
            <column-instance column='[battery]' derivation='Sum' name='[sum:battery:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ranges_km]' derivation='Sum' name='[sum:ranges_km:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.06ad92g138o9vi16zgmyt0k9zjql].[Brand Name (group)]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Brand Name (group)]' member='&quot;BMW Group&quot;' />
              <groupfilter function='member' level='[Brand Name (group)]' member='&quot;Ford&quot;' />
              <groupfilter function='member' level='[Brand Name (group)]' member='&quot;Geely Group (China)&quot;' />
              <groupfilter function='member' level='[Brand Name (group)]' member='&quot;Honda&quot;' />
              <groupfilter function='member' level='[Brand Name (group)]' member='&quot;Hyundai Motor Group&quot;' />
              <groupfilter function='member' level='[Brand Name (group)]' member='&quot;Jaguar&quot;' />
              <groupfilter function='member' level='[Brand Name (group)]' member='&quot;Mazda&quot;' />
              <groupfilter function='member' level='[Brand Name (group)]' member='&quot;Mercedes-Benz Group&quot;' />
              <groupfilter function='member' level='[Brand Name (group)]' member='&quot;Nissan, Renault&quot;' />
              <groupfilter function='member' level='[Brand Name (group)]' member='&quot;Other Chinese EV Brands&quot;' />
              <groupfilter function='member' level='[Brand Name (group)]' member='&quot;Others&quot;' />
              <groupfilter function='member' level='[Brand Name (group)]' member='&quot;Renault Group&quot;' />
              <groupfilter function='member' level='[Brand Name (group)]' member='&quot;Stellantis&quot;' />
              <groupfilter function='member' level='[Brand Name (group)]' member='&quot;Tesla&quot;' />
              <groupfilter function='member' level='[Brand Name (group)]' member='&quot;Toyota Group&quot;' />
              <groupfilter function='member' level='[Brand Name (group)]' member='&quot;VW Group&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.06ad92g138o9vi16zgmyt0k9zjql].[none:brand_name:nk]'>
            <groupfilter function='level-members' level='[none:brand_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.06ad92g138o9vi16zgmyt0k9zjql].[Brand Name (group)]</column>
            <column>[federated.06ad92g138o9vi16zgmyt0k9zjql].[none:brand_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.06ad92g138o9vi16zgmyt0k9zjql].[Brand Name (group)]' />
              <lod column='[federated.06ad92g138o9vi16zgmyt0k9zjql].[none:car_name:nk]' />
              <tooltip column='[federated.06ad92g138o9vi16zgmyt0k9zjql].[attr:brand_name:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Brand Name (group):&#9;</run>
                <run bold='true'><![CDATA[<[federated.06ad92g138o9vi16zgmyt0k9zjql].[Brand Name (group)]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Brand Name:&#9;</run>
                <run bold='true'><![CDATA[<[federated.06ad92g138o9vi16zgmyt0k9zjql].[attr:brand_name:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Car Name:&#9;</run>
                <run bold='true'><![CDATA[<[federated.06ad92g138o9vi16zgmyt0k9zjql].[none:car_name:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Battery:&#9;</run>
                <run bold='true'><![CDATA[<[federated.06ad92g138o9vi16zgmyt0k9zjql].[sum:battery:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Ranges Km:&#9;</run>
                <run bold='true'><![CDATA[<[federated.06ad92g138o9vi16zgmyt0k9zjql].[sum:ranges_km:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.9010497331619263' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.06ad92g138o9vi16zgmyt0k9zjql].[sum:battery:qk]</rows>
        <cols>[federated.06ad92g138o9vi16zgmyt0k9zjql].[sum:ranges_km:qk]</cols>
      </table>
      <simple-id uuid='{045F2F54-F3F0-4859-9E49-EB160621A52D}' />
    </worksheet>
    <worksheet name='DS1-Scatter-EUR/KM'>
      <layout-options>
        <title>
          <formatted-text>
            <run>EVs relation with Price and Range</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='ds1_ev_cars1 (double_trouble.ds1_ev_cars1) (lavender_notebooks)' name='federated.06ad92g138o9vi16zgmyt0k9zjql' />
          </datasources>
          <datasource-dependencies datasource='federated.06ad92g138o9vi16zgmyt0k9zjql'>
            <column datatype='string' name='[Brand Name (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[brand_name]' new-bin='true'>
                <bin default-name='false' value='&quot;BMW Group&quot;'>
                  <value>&quot;BMW&quot;</value>
                  <value>&quot;Mini&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Geely Group (China)&quot;'>
                  <value>&quot;Lotus&quot;</value>
                  <value>&quot;Polestar&quot;</value>
                  <value>&quot;Volvo&quot;</value>
                  <value>&quot;Zeekr&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Hyundai Motor Group&quot;'>
                  <value>&quot;Genesis&quot;</value>
                  <value>&quot;Hyundai&quot;</value>
                  <value>&quot;Kia&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Mercedes-Benz Group&quot;'>
                  <value>&quot;Mercedes&quot;</value>
                  <value>&quot;Smart&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Nissan, Renault&quot;'>
                  <value>&quot;Nissan&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Other Chinese EV Brands&quot;'>
                  <value>&quot;Aiways&quot;</value>
                  <value>&quot;BYD&quot;</value>
                  <value>&quot;Maxus&quot;</value>
                  <value>&quot;MG&quot;</value>
                  <value>&quot;NIO&quot;</value>
                  <value>&quot;ORA&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Others&quot;'>
                  <value>&quot;Elaris&quot;</value>
                  <value>&quot;Fisker&quot;</value>
                  <value>&quot;Lucid&quot;</value>
                  <value>&quot;SsangYong&quot;</value>
                  <value>&quot;Subaru&quot;</value>
                  <value>&quot;VinFast&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Renault Group&quot;'>
                  <value>&quot;Dacia&quot;</value>
                  <value>&quot;Renault&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Stellantis&quot;'>
                  <value>&quot;Abarth&quot;</value>
                  <value>&quot;Citroen&quot;</value>
                  <value>&quot;DS&quot;</value>
                  <value>&quot;Fiat&quot;</value>
                  <value>&quot;Jeep&quot;</value>
                  <value>&quot;Opel&quot;</value>
                  <value>&quot;Peugeot&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Toyota Group&quot;'>
                  <value>&quot;Lexus&quot;</value>
                  <value>&quot;Toyota&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;VW Group&quot;'>
                  <value>&quot;Audi&quot;</value>
                  <value>&quot;CUPRA&quot;</value>
                  <value>&quot;Porsche&quot;</value>
                  <value>&quot;Skoda&quot;</value>
                  <value>&quot;Volkswagen&quot;</value>
                </bin>
              </calculation>
            </column>
            <column-instance column='[brand_name]' derivation='Attribute' name='[attr:brand_name:nk]' pivot='key' type='nominal' />
            <column caption='Battery' datatype='real' name='[battery]' role='measure' type='quantitative' />
            <column caption='Brand Name' datatype='string' name='[brand_name]' role='dimension' type='nominal' />
            <column caption='Car Name' datatype='string' name='[car_name]' role='dimension' type='nominal' />
            <column-instance column='[brand_name]' derivation='None' name='[none:brand_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[car_name]' derivation='None' name='[none:car_name:nk]' pivot='key' type='nominal' />
            <column caption='Price De' datatype='real' name='[price_de]' role='measure' type='quantitative' />
            <column caption='Ranges Km' datatype='real' name='[ranges_km]' role='measure' type='quantitative' />
            <column-instance column='[battery]' derivation='Sum' name='[sum:battery:qk]' pivot='key' type='quantitative' />
            <column-instance column='[price_de]' derivation='Sum' name='[sum:price_de:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ranges_km]' derivation='Sum' name='[sum:ranges_km:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.06ad92g138o9vi16zgmyt0k9zjql].[Brand Name (group)]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Brand Name (group)]' member='&quot;BMW Group&quot;' />
              <groupfilter function='member' level='[Brand Name (group)]' member='&quot;Ford&quot;' />
              <groupfilter function='member' level='[Brand Name (group)]' member='&quot;Geely Group (China)&quot;' />
              <groupfilter function='member' level='[Brand Name (group)]' member='&quot;Honda&quot;' />
              <groupfilter function='member' level='[Brand Name (group)]' member='&quot;Hyundai Motor Group&quot;' />
              <groupfilter function='member' level='[Brand Name (group)]' member='&quot;Jaguar&quot;' />
              <groupfilter function='member' level='[Brand Name (group)]' member='&quot;Mazda&quot;' />
              <groupfilter function='member' level='[Brand Name (group)]' member='&quot;Mercedes-Benz Group&quot;' />
              <groupfilter function='member' level='[Brand Name (group)]' member='&quot;Nissan, Renault&quot;' />
              <groupfilter function='member' level='[Brand Name (group)]' member='&quot;Other Chinese EV Brands&quot;' />
              <groupfilter function='member' level='[Brand Name (group)]' member='&quot;Others&quot;' />
              <groupfilter function='member' level='[Brand Name (group)]' member='&quot;Renault Group&quot;' />
              <groupfilter function='member' level='[Brand Name (group)]' member='&quot;Stellantis&quot;' />
              <groupfilter function='member' level='[Brand Name (group)]' member='&quot;Tesla&quot;' />
              <groupfilter function='member' level='[Brand Name (group)]' member='&quot;Toyota Group&quot;' />
              <groupfilter function='member' level='[Brand Name (group)]' member='&quot;VW Group&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.06ad92g138o9vi16zgmyt0k9zjql].[none:brand_name:nk]'>
            <groupfilter function='level-members' level='[none:brand_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.06ad92g138o9vi16zgmyt0k9zjql].[none:car_name:nk]'>
            <groupfilter function='level-members' level='[none:car_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.06ad92g138o9vi16zgmyt0k9zjql].[Brand Name (group)]</column>
            <column>[federated.06ad92g138o9vi16zgmyt0k9zjql].[none:brand_name:nk]</column>
            <column>[federated.06ad92g138o9vi16zgmyt0k9zjql].[none:car_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.06ad92g138o9vi16zgmyt0k9zjql].[Brand Name (group)]' />
              <tooltip column='[federated.06ad92g138o9vi16zgmyt0k9zjql].[sum:battery:qk]' />
              <tooltip column='[federated.06ad92g138o9vi16zgmyt0k9zjql].[attr:brand_name:nk]' />
              <lod column='[federated.06ad92g138o9vi16zgmyt0k9zjql].[none:car_name:nk]' />
              <lod column='[federated.06ad92g138o9vi16zgmyt0k9zjql].[Brand Name (group)]' />
              <lod column='[federated.06ad92g138o9vi16zgmyt0k9zjql].[Brand Name (group)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Brand Name (group):&#9;</run>
                <run bold='true'><![CDATA[<[federated.06ad92g138o9vi16zgmyt0k9zjql].[Brand Name (group)]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Brand Name:&#9;</run>
                <run bold='true'><![CDATA[<[federated.06ad92g138o9vi16zgmyt0k9zjql].[attr:brand_name:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Car Name:&#9;</run>
                <run bold='true'><![CDATA[<[federated.06ad92g138o9vi16zgmyt0k9zjql].[none:car_name:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Battery:&#9;</run>
                <run bold='true'><![CDATA[<[federated.06ad92g138o9vi16zgmyt0k9zjql].[sum:battery:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Ranges Km:&#9;</run>
                <run bold='true'><![CDATA[<[federated.06ad92g138o9vi16zgmyt0k9zjql].[sum:ranges_km:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Price De:&#9;</run>
                <run bold='true'><![CDATA[<[federated.06ad92g138o9vi16zgmyt0k9zjql].[sum:price_de:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.9010497331619263' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.06ad92g138o9vi16zgmyt0k9zjql].[sum:price_de:qk]</rows>
        <cols>[federated.06ad92g138o9vi16zgmyt0k9zjql].[sum:ranges_km:qk]</cols>
        <annotations>
          <annotation class='point' id='1' mark-position='1' pullback='12' text-width='129'>
            <formatted-text>
              <run fontcolor='#787878'>Car Name: </run>
              <run bold='true'><![CDATA[<[federated.06ad92g138o9vi16zgmyt0k9zjql].[none:car_name:nk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Price De: </run>
              <run bold='true'><![CDATA[<[federated.06ad92g138o9vi16zgmyt0k9zjql].[sum:price_de:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Ranges Km: </run>
              <run bold='true'><![CDATA[<[federated.06ad92g138o9vi16zgmyt0k9zjql].[sum:ranges_km:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.06ad92g138o9vi16zgmyt0k9zjql].[sum:ranges_km:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.06ad92g138o9vi16zgmyt0k9zjql].[sum:price_de:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.06ad92g138o9vi16zgmyt0k9zjql].[none:brand_name:nk]</field>
                      <field>[federated.06ad92g138o9vi16zgmyt0k9zjql].[none:car_name:nk]</field>
                      <field>[federated.06ad92g138o9vi16zgmyt0k9zjql].[sum:price_de:qk]</field>
                      <field>[federated.06ad92g138o9vi16zgmyt0k9zjql].[sum:ranges_km:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;Tesla&quot;</value>
                    <value>&quot;Tesla Model Y&quot;</value>
                    <value>95134.0</value>
                    <value>700.0</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-244' y='-103' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{8BFAF1BB-69E3-43EA-B046-E3935A342635}' />
    </worksheet>
    <worksheet name='EV Charging Points Germany'>
      <table>
        <view>
          <datasources>
            <datasource caption='DS3_charging_data' name='federated.086k1gm10z1nmp19scxzo0mo5d3a' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.086k1gm10z1nmp19scxzo0mo5d3a'>
            <column caption='AC and DC' datatype='string' name='[Calculation_3650730516158357510]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [anschlussleistung] &lt; 50 THEN &apos;AC Charging&apos;&#10;ELSE &apos;DC Fast Chargning&apos;&#10;END' />
            </column>
            <column caption='Anschlussleistung' datatype='real' name='[anschlussleistung]' role='measure' type='quantitative' />
            <column caption='Anzahl Ladepunkte' datatype='integer' name='[anzahl_ladepunkte]' role='measure' type='quantitative' />
            <column-instance column='[breitengrad]' derivation='Avg' name='[avg:breitengrad:qk]' pivot='key' type='quantitative' />
            <column aggregation='Avg' caption='Breitengrad' datatype='real' name='[breitengrad]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column-instance column='[Calculation_3650730516158357510]' derivation='None' name='[none:Calculation_3650730516158357510:nk]' pivot='key' type='nominal' />
            <column-instance column='[postleitzahl]' derivation='None' name='[none:postleitzahl:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Postleitzahl' datatype='integer' default-format='*00000' name='[postleitzahl]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
            <column-instance column='[anzahl_ladepunkte]' derivation='Sum' name='[sum:anzahl_ladepunkte:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.086k1gm10z1nmp19scxzo0mo5d3a].[none:Calculation_3650730516158357510:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_3650730516158357510:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.086k1gm10z1nmp19scxzo0mo5d3a].[none:Calculation_3650730516158357510:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.086k1gm10z1nmp19scxzo0mo5d3a].[Longitude (generated)]' field-type='quantitative' max='1584830.6653656687' min='909587.82369758678' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.086k1gm10z1nmp19scxzo0mo5d3a].[Latitude (generated)]' field-type='quantitative' max='7005294.2738867253' min='6528166.7090022434' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='streets' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Heatmap' />
            <encodings>
              <lod column='[federated.086k1gm10z1nmp19scxzo0mo5d3a].[none:postleitzahl:ok]' />
              <lod column='[federated.086k1gm10z1nmp19scxzo0mo5d3a].[avg:breitengrad:qk]' />
              <tooltip column='[federated.086k1gm10z1nmp19scxzo0mo5d3a].[sum:anzahl_ladepunkte:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <encoding attr='density-color' palette='purple_10_0' type='interpolated' />
                <format attr='mark-transparency' value='170' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='density-intensity' value='0.226826012134552' />
                <format attr='has-stroke' value='true' />
                <format attr='density-kernel-size' value='0.88955801725387573' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.086k1gm10z1nmp19scxzo0mo5d3a].[Latitude (generated)]</rows>
        <cols>[federated.086k1gm10z1nmp19scxzo0mo5d3a].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{E7D0CE92-76BE-4E15-94EF-74D208FE2400}' />
    </worksheet>
    <worksheet name='EV Charging Points Germany (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='DS3_charging_data' name='federated.086k1gm10z1nmp19scxzo0mo5d3a' />
            <datasource caption='ds5_germanygasstations (double_trouble.ds5_germanygasstations) (lavender_notebooks)' name='federated.0cwf5am01d93k414a60rr195vtc5' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.086k1gm10z1nmp19scxzo0mo5d3a'>
            <column caption='AC and DC' datatype='string' name='[Calculation_3650730516158357510]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [anschlussleistung] &lt; 50 THEN &apos;AC Charging&apos;&#10;ELSE &apos;DC Fast Chargning&apos;&#10;END' />
            </column>
            <column caption='Anschlussleistung' datatype='real' name='[anschlussleistung]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_3650730516158357510]' derivation='None' name='[none:Calculation_3650730516158357510:nk]' pivot='key' type='nominal' />
            <column-instance column='[postleitzahl]' derivation='None' name='[none:postleitzahl:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Postleitzahl' datatype='integer' default-format='*00000' name='[postleitzahl]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0cwf5am01d93k414a60rr195vtc5'>
            <column-instance column='[post_code]' derivation='None' name='[none:post_code:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Post Code' datatype='integer' datatype-customized='true' default-format='*00000' name='[post_code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.086k1gm10z1nmp19scxzo0mo5d3a].[none:Calculation_3650730516158357510:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_3650730516158357510:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.086k1gm10z1nmp19scxzo0mo5d3a].[none:Calculation_3650730516158357510:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.086k1gm10z1nmp19scxzo0mo5d3a].[Longitude (generated)]' field-type='quantitative' max='1584830.6653656687' min='909587.82369758678' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.086k1gm10z1nmp19scxzo0mo5d3a].[Latitude (generated)]' field-type='quantitative' max='7005294.2738867253' min='6528166.7090022434' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='streets' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Heatmap' />
            <encodings>
              <lod column='[federated.0cwf5am01d93k414a60rr195vtc5].[none:post_code:ok]' />
              <lod column='[federated.086k1gm10z1nmp19scxzo0mo5d3a].[none:postleitzahl:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <encoding attr='density-color' palette='purple_10_0' type='interpolated' />
                <format attr='mark-transparency' value='170' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='density-intensity' value='0.226826012134552' />
                <format attr='has-stroke' value='true' />
                <format attr='density-kernel-size' value='0.88955801725387573' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.086k1gm10z1nmp19scxzo0mo5d3a].[Latitude (generated)]</rows>
        <cols>[federated.086k1gm10z1nmp19scxzo0mo5d3a].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{75BFDE2C-44BD-4530-9F9D-90E282BE022E}' />
    </worksheet>
    <worksheet name='EV DE/Europe Sales Trends'>
      <table>
        <view>
          <datasources>
            <datasource caption='ds9_sales_and_market_share_final (double_trouble.ds9_sales_and_market_share_final) (lavender_notebooks)' name='federated.0dg9z711egh454194wrp511fclx2' />
          </datasources>
          <datasource-dependencies datasource='federated.0dg9z711egh454194wrp511fclx2'>
            <column caption='Brand' datatype='string' name='[brand]' role='dimension' type='nominal' />
            <column caption='Europe Market Sales Bev' datatype='integer' name='[europe_market_sales_bev]' role='measure' type='quantitative' />
            <column caption='Germany Market Sales Bev' datatype='integer' name='[germany_market_sales_bev]' role='measure' type='quantitative' />
            <column-instance column='[brand]' derivation='None' name='[none:brand:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[europe_market_sales_bev]' derivation='Sum' name='[sum:europe_market_sales_bev:qk]' pivot='key' type='quantitative' />
            <column-instance column='[germany_market_sales_bev]' derivation='Sum' name='[sum:germany_market_sales_bev:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dg9z711egh454194wrp511fclx2].[none:brand:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:brand:nk]' member='&quot;tesla&quot;' />
              <groupfilter function='member' level='[none:brand:nk]' member='&quot;vw_group&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0dg9z711egh454194wrp511fclx2].[none:year:qk]' included-values='in-range'>
            <min>2020</min>
            <max>2024</max>
          </filter>
          <slices>
            <column>[federated.0dg9z711egh454194wrp511fclx2].[none:year:qk]</column>
            <column>[federated.0dg9z711egh454194wrp511fclx2].[none:brand:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0dg9z711egh454194wrp511fclx2].[sum:europe_market_sales_bev:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0dg9z711egh454194wrp511fclx2].[none:brand:nk]' />
              <color column='[federated.0dg9z711egh454194wrp511fclx2].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2' />
                <format attr='mark-color' value='#72b966' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0dg9z711egh454194wrp511fclx2].[sum:germany_market_sales_bev:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0dg9z711egh454194wrp511fclx2].[none:brand:nk]' />
              <color column='[federated.0dg9z711egh454194wrp511fclx2].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2' />
                <format attr='mark-color' value='#72b966' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0dg9z711egh454194wrp511fclx2].[sum:europe_market_sales_bev:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0dg9z711egh454194wrp511fclx2].[none:brand:nk]' />
              <color column='[federated.0dg9z711egh454194wrp511fclx2].[:Measure Names]' />
              <tooltip column='[federated.0dg9z711egh454194wrp511fclx2].[sum:germany_market_sales_bev:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2' />
                <format attr='mark-color' value='#72b966' />
                <format attr='mark-transparency' value='37' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0dg9z711egh454194wrp511fclx2].[none:brand:nk] * ([federated.0dg9z711egh454194wrp511fclx2].[sum:germany_market_sales_bev:qk] + [federated.0dg9z711egh454194wrp511fclx2].[sum:europe_market_sales_bev:qk]))</rows>
        <cols>[federated.0dg9z711egh454194wrp511fclx2].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{6A35F285-87AF-486A-B83D-95CAD3DCF87F}' />
    </worksheet>
    <worksheet name='EV DE/Global Share'>
      <table>
        <view>
          <datasources>
            <datasource caption='ds9_sales_and_market_share_final (double_trouble.ds9_sales_and_market_share_final) (lavender_notebooks)' name='federated.0dg9z711egh454194wrp511fclx2' />
          </datasources>
          <datasource-dependencies datasource='federated.0dg9z711egh454194wrp511fclx2'>
            <column caption='Brand' datatype='string' name='[brand]' role='dimension' type='nominal' />
            <column caption='Germany Bev Share' datatype='integer' name='[germany_bev_share]' role='measure' type='quantitative' />
            <column caption='Global Bev Share' datatype='real' name='[global_bev_share]' role='measure' type='quantitative' />
            <column-instance column='[brand]' derivation='None' name='[none:brand:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[germany_bev_share]' derivation='Sum' name='[sum:germany_bev_share:qk]' pivot='key' type='quantitative' />
            <column-instance column='[global_bev_share]' derivation='Sum' name='[sum:global_bev_share:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dg9z711egh454194wrp511fclx2].[none:brand:nk]'>
            <groupfilter function='member' level='[none:brand:nk]' member='&quot;skoda&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0dg9z711egh454194wrp511fclx2].[none:brand:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0dg9z711egh454194wrp511fclx2].[sum:global_bev_share:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0dg9z711egh454194wrp511fclx2].[none:brand:nk]' />
              <lod column='[federated.0dg9z711egh454194wrp511fclx2].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0dg9z711egh454194wrp511fclx2].[sum:germany_bev_share:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0dg9z711egh454194wrp511fclx2].[none:brand:nk]' />
              <lod column='[federated.0dg9z711egh454194wrp511fclx2].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0dg9z711egh454194wrp511fclx2].[sum:global_bev_share:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0dg9z711egh454194wrp511fclx2].[none:brand:nk]' />
              <lod column='[federated.0dg9z711egh454194wrp511fclx2].[:Measure Names]' />
              <lod column='[federated.0dg9z711egh454194wrp511fclx2].[sum:germany_bev_share:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='196' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0dg9z711egh454194wrp511fclx2].[none:brand:nk] * ([federated.0dg9z711egh454194wrp511fclx2].[sum:germany_bev_share:qk] + [federated.0dg9z711egh454194wrp511fclx2].[sum:global_bev_share:qk]))</rows>
        <cols>[federated.0dg9z711egh454194wrp511fclx2].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{7301BF78-21C9-470B-BADB-C5D13C67BF0E}' />
    </worksheet>
    <worksheet name='EV Sales 2024 in Germany'>
      <table>
        <view>
          <datasources>
            <datasource caption='ds7_e_car_sales (double_trouble.ds7_e_car_sales) (lavender_notebooks)' name='federated.1vyi95b0q8yknk13dw5u81htbwnw' />
          </datasources>
          <datasource-dependencies datasource='federated.1vyi95b0q8yknk13dw5u81htbwnw'>
            <column-instance column='[non_bev_sales]' derivation='Attribute' name='[attr:non_bev_sales:qk]' pivot='key' type='quantitative' />
            <column caption='Bev Sales' datatype='integer' datatype-customized='true' name='[bev_sales]' role='dimension' type='ordinal' />
            <column caption='Brand' datatype='string' name='[brand]' role='dimension' type='nominal' />
            <column caption='Market Share Per' datatype='real' name='[market_share_per]' role='measure' type='quantitative' />
            <column caption='Non Bev Sales' datatype='integer' datatype-customized='true' name='[non_bev_sales]' role='dimension' type='ordinal' />
            <column-instance column='[bev_sales]' derivation='None' name='[none:bev_sales:ok]' pivot='key' type='ordinal' />
            <column-instance column='[brand]' derivation='None' name='[none:brand:nk]' pivot='key' type='nominal' />
            <column-instance column='[non_bev_sales]' derivation='None' name='[none:non_bev_sales:ok]' pivot='key' type='ordinal' />
            <column-instance column='[bev_sales]' derivation='Sum' name='[sum:bev_sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[market_share_per]' derivation='Sum' name='[sum:market_share_per:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vyi95b0q8yknk13dw5u81htbwnw].[Exclusions (Bev Sales,Brand)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:bev_sales:ok]' />
                <groupfilter function='level-members' level='[none:brand:nk]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:bev_sales:ok]' member='380609' />
                <groupfilter function='member' level='[none:brand:nk]' member='&quot;TOTAL MARKET&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1vyi95b0q8yknk13dw5u81htbwnw].[Exclusions (Bev Sales,Brand,Non Bev Sales)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:bev_sales:ok]' />
                <groupfilter function='level-members' level='[none:brand:nk]' />
                <groupfilter function='level-members' level='[none:non_bev_sales:ok]' />
              </groupfilter>
              <groupfilter function='union'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:bev_sales:ok]' member='3349' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:brand:nk]' member='&quot;PEUGEOT&quot;' />
                    <groupfilter function='member' level='[none:non_bev_sales:ok]' member='64105' />
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:bev_sales:ok]' member='3655' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:brand:nk]' member='&quot;DACIA&quot;' />
                    <groupfilter function='member' level='[none:non_bev_sales:ok]' member='67769' />
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:bev_sales:ok]' member='5538' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:brand:nk]' member='&quot;FORD&quot;' />
                    <groupfilter function='member' level='[none:non_bev_sales:ok]' member='94016' />
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:bev_sales:ok]' member='5797' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:brand:nk]' member='&quot;RENAULT&quot;' />
                    <groupfilter function='member' level='[none:non_bev_sales:ok]' member='48552' />
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:bev_sales:ok]' member='7254' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:brand:nk]' member='&quot;PORSCHE&quot;' />
                    <groupfilter function='member' level='[none:non_bev_sales:ok]' member='28843' />
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:bev_sales:ok]' member='7633' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:brand:nk]' member='&quot;OPEL&quot;' />
                    <groupfilter function='member' level='[none:non_bev_sales:ok]' member='140200' />
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:bev_sales:ok]' member='8474' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:brand:nk]' member='&quot;FIAT&quot;' />
                    <groupfilter function='member' level='[none:non_bev_sales:ok]' member='49087' />
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:bev_sales:ok]' member='9225' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:brand:nk]' member='&quot;MINI&quot;' />
                    <groupfilter function='member' level='[none:non_bev_sales:ok]' member='23346' />
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:bev_sales:ok]' member='11837' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:brand:nk]' member='&quot;KIA&quot;' />
                    <groupfilter function='member' level='[none:non_bev_sales:ok]' member='56819' />
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:bev_sales:ok]' member='12463' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:brand:nk]' member='&quot;SMART&quot;' />
                    <groupfilter function='member' level='[none:non_bev_sales:ok]' member='0' />
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:bev_sales:ok]' member='13535' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:brand:nk]' member='&quot;VOLVO&quot;' />
                    <groupfilter function='member' level='[none:non_bev_sales:ok]' member='48791' />
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:bev_sales:ok]' member='14370' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:brand:nk]' member='&quot;MG&quot;' />
                    <groupfilter function='member' level='[none:non_bev_sales:ok]' member='6607' />
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:bev_sales:ok]' member='16952' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:brand:nk]' member='&quot;HYUNDAI&quot;' />
                    <groupfilter function='member' level='[none:non_bev_sales:ok]' member='79413' />
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:bev_sales:ok]' member='18248' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:brand:nk]' member='&quot;SEAT&quot;' />
                    <groupfilter function='member' level='[none:non_bev_sales:ok]' member='134086' />
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:bev_sales:ok]' member='21831' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:brand:nk]' member='&quot;AUDI&quot;' />
                    <groupfilter function='member' level='[none:non_bev_sales:ok]' member='180486' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1vyi95b0q8yknk13dw5u81htbwnw].[none:brand:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1vyi95b0q8yknk13dw5u81htbwnw].[sum:market_share_per:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1vyi95b0q8yknk13dw5u81htbwnw].[Exclusions (Bev Sales,Brand)]</column>
            <column>[federated.1vyi95b0q8yknk13dw5u81htbwnw].[Exclusions (Bev Sales,Brand,Non Bev Sales)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1vyi95b0q8yknk13dw5u81htbwnw].[none:non_bev_sales:ok]' />
              <tooltip column='[federated.1vyi95b0q8yknk13dw5u81htbwnw].[attr:non_bev_sales:qk]' />
              <text column='[federated.1vyi95b0q8yknk13dw5u81htbwnw].[none:bev_sales:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-transparency' value='150' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#59a14f' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1vyi95b0q8yknk13dw5u81htbwnw].[sum:bev_sales:qk]</rows>
        <cols>[federated.1vyi95b0q8yknk13dw5u81htbwnw].[none:brand:nk]</cols>
      </table>
      <simple-id uuid='{C1B61E03-3865-4BD9-8E0A-20F02E9E1B0E}' />
    </worksheet>
    <worksheet name='EV models from different brand'>
      <table>
        <view>
          <datasources>
            <datasource caption='ds1_ev_cars1 (double_trouble.ds1_ev_cars1) (lavender_notebooks)' name='federated.06ad92g138o9vi16zgmyt0k9zjql' />
          </datasources>
          <datasource-dependencies datasource='federated.06ad92g138o9vi16zgmyt0k9zjql'>
            <column caption='Brand Name' datatype='string' name='[brand_name]' role='dimension' type='nominal' />
            <column-instance column='[brand_name]' derivation='Count' name='[cnt:brand_name:qk]' pivot='key' type='quantitative' />
            <column-instance column='[brand_name]' derivation='None' name='[none:brand_name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.06ad92g138o9vi16zgmyt0k9zjql].[none:brand_name:nk]' />
              <size column='[federated.06ad92g138o9vi16zgmyt0k9zjql].[cnt:brand_name:qk]' />
              <text column='[federated.06ad92g138o9vi16zgmyt0k9zjql].[none:brand_name:nk]' />
              <text column='[federated.06ad92g138o9vi16zgmyt0k9zjql].[cnt:brand_name:qk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='12' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{A78E8FF2-5EBF-476C-B98A-911A7B5C5E0F}' />
    </worksheet>
    <worksheet name='Fuel stations'>
      <table>
        <view>
          <datasources>
            <datasource caption='ds5_germanygasstations (double_trouble.ds5_germanygasstations) (lavender_notebooks)' name='federated.0cwf5am01d93k414a60rr195vtc5' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0cwf5am01d93k414a60rr195vtc5'>
            <column caption='City (copy)' datatype='string' default-role='measure' default-type='quantitative' name='[City (copy)_3650730514485092356]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <calculation class='tableau' formula='[city]' />
            </column>
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[City (copy)_3650730514485092356]' derivation='Count' name='[cnt:City (copy)_3650730514485092356:qk]' pivot='key' type='quantitative' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0cwf5am01d93k414a60rr195vtc5].[none:city:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([City (copy)_3650730514485092356])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:city:nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0cwf5am01d93k414a60rr195vtc5].[none:city:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0cwf5am01d93k414a60rr195vtc5].[cnt:City (copy)_3650730514485092356:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0cwf5am01d93k414a60rr195vtc5].[none:city:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='streets' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0cwf5am01d93k414a60rr195vtc5].[none:city:nk]' />
              <size column='[federated.0cwf5am01d93k414a60rr195vtc5].[cnt:City (copy)_3650730514485092356:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.1754143238067627' />
                <format attr='mark-transparency' value='216' />
                <format attr='density-intensity' value='0.42375001311302185' />
                <encoding attr='density-color' palette='purple_10_0' type='interpolated' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0cwf5am01d93k414a60rr195vtc5].[cnt:City (copy)_3650730514485092356:qk]</rows>
        <cols>[federated.0cwf5am01d93k414a60rr195vtc5].[none:city:nk]</cols>
      </table>
      <simple-id uuid='{AD777A28-40E9-44A9-A706-EB6E95751334}' />
    </worksheet>
    <worksheet name='Global Sales'>
      <table>
        <view>
          <datasources>
            <datasource caption='airports+ (lavender_notebooks)' name='federated.0to5re41omz4tb1bzsjza0u5by2q' />
          </datasources>
          <datasource-dependencies datasource='federated.0to5re41omz4tb1bzsjza0u5by2q'>
            <column caption='Brand' datatype='string' name='[brand]' role='dimension' type='nominal' />
            <column caption='Global Market Sales' datatype='integer' name='[global_market_sales]' role='measure' type='quantitative' />
            <column caption='Global Market Sales Bev' datatype='integer' name='[global_market_sales_bev]' role='measure' type='quantitative' />
            <column-instance column='[brand]' derivation='None' name='[none:brand:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[global_market_sales]' derivation='Sum' name='[sum:global_market_sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[global_market_sales_bev]' derivation='Sum' name='[sum:global_market_sales_bev:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0to5re41omz4tb1bzsjza0u5by2q].[none:year:ok]'>
            <groupfilter function='member' level='[none:year:ok]' member='2024' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0to5re41omz4tb1bzsjza0u5by2q].[none:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0to5re41omz4tb1bzsjza0u5by2q].[sum:global_market_sales_bev:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0to5re41omz4tb1bzsjza0u5by2q].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0to5re41omz4tb1bzsjza0u5by2q].[sum:global_market_sales_bev:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0to5re41omz4tb1bzsjza0u5by2q].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0to5re41omz4tb1bzsjza0u5by2q].[sum:global_market_sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0to5re41omz4tb1bzsjza0u5by2q].[:Measure Names]' />
              <tooltip column='[federated.0to5re41omz4tb1bzsjza0u5by2q].[sum:global_market_sales_bev:qk]' />
              <text column='[federated.0to5re41omz4tb1bzsjza0u5by2q].[sum:global_market_sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-transparency' value='152' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0to5re41omz4tb1bzsjza0u5by2q].[sum:global_market_sales:qk] + [federated.0to5re41omz4tb1bzsjza0u5by2q].[sum:global_market_sales_bev:qk])</rows>
        <cols>[federated.0to5re41omz4tb1bzsjza0u5by2q].[none:brand:nk]</cols>
      </table>
      <simple-id uuid='{7573595F-0A29-484D-83C6-05C234D2D4FE}' />
    </worksheet>
    <worksheet name='Modes over time '>
      <table>
        <view>
          <datasources>
            <datasource caption='ds2_iea_global_ev_data (double_trouble.ds2_iea_global_ev_data) (lavender_notebooks)' name='federated.0kwb95s04avje60zm1d4j0f9vovi' />
          </datasources>
          <datasource-dependencies datasource='federated.0kwb95s04avje60zm1d4j0f9vovi'>
            <column caption='Mode' datatype='string' name='[mode]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;EV&quot;' value='No. of charging stations (Germany)' />
              </aliases>
            </column>
            <column-instance column='[mode]' derivation='None' name='[none:mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[value]' derivation='Sum' name='[pcdf:sum:value:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column caption='Region' datatype='string' name='[region]' role='dimension' type='nominal' />
            <column-instance column='[value]' derivation='Sum' name='[sum:value:qk]' pivot='key' type='quantitative' />
            <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kwb95s04avje60zm1d4j0f9vovi].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kwb95s04avje60zm1d4j0f9vovi].[pcdf:sum:value:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kwb95s04avje60zm1d4j0f9vovi].[sum:value:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0kwb95s04avje60zm1d4j0f9vovi].[none:mode:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:mode:nk]' />
              <groupfilter function='member' level='[none:mode:nk]' member='&quot;EV&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0kwb95s04avje60zm1d4j0f9vovi].[none:mode:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Cars&quot;</bucket>
              <bucket>&quot;Vans&quot;</bucket>
              <bucket>&quot;Trucks&quot;</bucket>
              <bucket>&quot;Buses&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0kwb95s04avje60zm1d4j0f9vovi].[none:region:nk]'>
            <groupfilter function='member' level='[none:region:nk]' member='&quot;Germany&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0kwb95s04avje60zm1d4j0f9vovi].[none:year:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:year:ok]' member='2017' />
              <groupfilter function='member' level='[none:year:ok]' member='2018' />
              <groupfilter function='member' level='[none:year:ok]' member='2019' />
              <groupfilter function='member' level='[none:year:ok]' member='2020' />
              <groupfilter function='member' level='[none:year:ok]' member='2021' />
              <groupfilter function='member' level='[none:year:ok]' member='2022' />
              <groupfilter function='member' level='[none:year:ok]' member='2023' />
              <groupfilter function='member' level='[none:year:ok]' member='2025' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0kwb95s04avje60zm1d4j0f9vovi].[none:mode:nk]</column>
            <column>[federated.0kwb95s04avje60zm1d4j0f9vovi].[none:region:nk]</column>
            <column>[federated.0kwb95s04avje60zm1d4j0f9vovi].[none:year:ok]</column>
            <column>[federated.0kwb95s04avje60zm1d4j0f9vovi].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0kwb95s04avje60zm1d4j0f9vovi].[none:year:ok]' value='73' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0kwb95s04avje60zm1d4j0f9vovi].[:Measure Names]' value='88' />
            <format attr='width' field='[federated.0kwb95s04avje60zm1d4j0f9vovi].[none:mode:nk]' value='52' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0kwb95s04avje60zm1d4j0f9vovi].[sum:value:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#d5e1e4</color>
                <color>#bcd2d8</color>
                <color>#a4c3cc</color>
                <color>#8db5c0</color>
                <color>#79a6b4</color>
                <color>#6599a8</color>
                <color>#548b9c</color>
                <color>#447e90</color>
                <color>#357284</color>
                <color>#296678</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.0kwb95s04avje60zm1d4j0f9vovi].[sum:value:qk]' />
              <text column='[federated.0kwb95s04avje60zm1d4j0f9vovi].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-transparency' value='185' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0kwb95s04avje60zm1d4j0f9vovi].[none:mode:nk] / [federated.0kwb95s04avje60zm1d4j0f9vovi].[:Measure Names])</rows>
        <cols>[federated.0kwb95s04avje60zm1d4j0f9vovi].[none:year:ok]</cols>
      </table>
      <simple-id uuid='{946AD1ED-A7F4-4A54-9AD1-D2E65E0EEC34}' />
    </worksheet>
    <worksheet name='Number of charging stations Germany'>
      <table>
        <view>
          <datasources>
            <datasource caption='ds2_iea_global_ev_data (double_trouble.ds2_iea_global_ev_data) (lavender_notebooks)' name='federated.0kwb95s04avje60zm1d4j0f9vovi' />
          </datasources>
          <datasource-dependencies datasource='federated.0kwb95s04avje60zm1d4j0f9vovi'>
            <column caption='Mode' datatype='string' name='[mode]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;EV&quot;' value='No. of charging stations (Germany)' />
              </aliases>
            </column>
            <column-instance column='[mode]' derivation='None' name='[none:mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[value]' derivation='Sum' name='[pcdf:sum:value:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column caption='Region' datatype='string' name='[region]' role='dimension' type='nominal' />
            <column-instance column='[value]' derivation='Sum' name='[sum:value:ok]' pivot='key' type='ordinal' />
            <column-instance column='[value]' derivation='Sum' name='[sum:value:qk]' pivot='key' type='quantitative' />
            <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kwb95s04avje60zm1d4j0f9vovi].[none:mode:nk]'>
            <groupfilter function='member' level='[none:mode:nk]' member='&quot;EV&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0kwb95s04avje60zm1d4j0f9vovi].[none:region:nk]'>
            <groupfilter function='member' level='[none:region:nk]' member='&quot;Germany&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0kwb95s04avje60zm1d4j0f9vovi].[none:year:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:year:ok]' member='2017' />
              <groupfilter function='member' level='[none:year:ok]' member='2018' />
              <groupfilter function='member' level='[none:year:ok]' member='2019' />
              <groupfilter function='member' level='[none:year:ok]' member='2020' />
              <groupfilter function='member' level='[none:year:ok]' member='2021' />
              <groupfilter function='member' level='[none:year:ok]' member='2022' />
              <groupfilter function='member' level='[none:year:ok]' member='2023' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0kwb95s04avje60zm1d4j0f9vovi].[none:year:ok]</column>
            <column>[federated.0kwb95s04avje60zm1d4j0f9vovi].[none:region:nk]</column>
            <column>[federated.0kwb95s04avje60zm1d4j0f9vovi].[none:mode:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.0kwb95s04avje60zm1d4j0f9vovi].[sum:value:qk]' />
              <text column='[federated.0kwb95s04avje60zm1d4j0f9vovi].[pcdf:sum:value:qk]' />
              <text column='[federated.0kwb95s04avje60zm1d4j0f9vovi].[sum:value:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0kwb95s04avje60zm1d4j0f9vovi].[none:mode:nk]</rows>
        <cols>[federated.0kwb95s04avje60zm1d4j0f9vovi].[none:year:ok]</cols>
      </table>
      <simple-id uuid='{C0E23C13-8C24-42A4-B66E-9E4508CAB893}' />
    </worksheet>
    <worksheet name='Sales Europe/Germany BEV'>
      <table>
        <view>
          <datasources>
            <datasource caption='airports+ (lavender_notebooks)' name='federated.0to5re41omz4tb1bzsjza0u5by2q' />
          </datasources>
          <datasource-dependencies datasource='federated.0to5re41omz4tb1bzsjza0u5by2q'>
            <column caption='Brand' datatype='string' name='[brand]' role='dimension' type='nominal' />
            <column caption='Europe Market Sales Bev' datatype='integer' name='[europe_market_sales_bev]' role='measure' type='quantitative' />
            <column caption='Germany Market Sales Bev' datatype='integer' name='[germany_market_sales_bev]' role='measure' type='quantitative' />
            <column-instance column='[brand]' derivation='None' name='[none:brand:nk]' pivot='key' type='nominal' />
            <column-instance column='[europe_market_sales_bev]' derivation='Sum' name='[sum:europe_market_sales_bev:qk]' pivot='key' type='quantitative' />
            <column-instance column='[germany_market_sales_bev]' derivation='Sum' name='[sum:germany_market_sales_bev:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0to5re41omz4tb1bzsjza0u5by2q].[sum:europe_market_sales_bev:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0to5re41omz4tb1bzsjza0u5by2q].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0to5re41omz4tb1bzsjza0u5by2q].[sum:germany_market_sales_bev:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0to5re41omz4tb1bzsjza0u5by2q].[:Measure Names]' />
              <text column='[federated.0to5re41omz4tb1bzsjza0u5by2q].[sum:germany_market_sales_bev:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#59a14f' />
                <format attr='mark-transparency' value='201' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0to5re41omz4tb1bzsjza0u5by2q].[sum:europe_market_sales_bev:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0to5re41omz4tb1bzsjza0u5by2q].[:Measure Names]' />
              <text column='[federated.0to5re41omz4tb1bzsjza0u5by2q].[sum:europe_market_sales_bev:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='183' />
                <format attr='mark-markers-mode' value='all' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0to5re41omz4tb1bzsjza0u5by2q].[sum:germany_market_sales_bev:qk] + [federated.0to5re41omz4tb1bzsjza0u5by2q].[sum:europe_market_sales_bev:qk])</rows>
        <cols>[federated.0to5re41omz4tb1bzsjza0u5by2q].[none:brand:nk]</cols>
      </table>
      <simple-id uuid='{2715E6B9-12DA-4D88-BB69-1B99635C6614}' />
    </worksheet>
    <worksheet name='top 10 cities with Charging points'>
      <table>
        <view>
          <datasources>
            <datasource caption='DS3_charging_data' name='federated.086k1gm10z1nmp19scxzo0mo5d3a' />
          </datasources>
          <datasource-dependencies datasource='federated.086k1gm10z1nmp19scxzo0mo5d3a'>
            <column caption='Anzahl Ladepunkte' datatype='integer' name='[anzahl_ladepunkte]' role='measure' type='quantitative' />
            <column-instance column='[ort]' derivation='None' name='[none:ort:nk]' pivot='key' type='nominal' />
            <column caption='Ort' datatype='string' name='[ort]' role='dimension' type='nominal' />
            <column-instance column='[anzahl_ladepunkte]' derivation='Sum' name='[sum:anzahl_ladepunkte:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.086k1gm10z1nmp19scxzo0mo5d3a].[none:ort:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([anzahl_ladepunkte])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:ort:nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.086k1gm10z1nmp19scxzo0mo5d3a].[none:ort:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.086k1gm10z1nmp19scxzo0mo5d3a].[sum:anzahl_ladepunkte:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.086k1gm10z1nmp19scxzo0mo5d3a].[none:ort:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.086k1gm10z1nmp19scxzo0mo5d3a].[sum:anzahl_ladepunkte:qk]' palette='purple_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.086k1gm10z1nmp19scxzo0mo5d3a].[sum:anzahl_ladepunkte:qk]' />
              <text column='[federated.086k1gm10z1nmp19scxzo0mo5d3a].[sum:anzahl_ladepunkte:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-transparency' value='206' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.086k1gm10z1nmp19scxzo0mo5d3a].[none:ort:nk]</rows>
        <cols>[federated.086k1gm10z1nmp19scxzo0mo5d3a].[sum:anzahl_ladepunkte:qk]</cols>
      </table>
      <simple-id uuid='{DA8A2461-DF66-4F66-8FDD-51684280FF92}' />
    </worksheet>
  </worksheets>
  <windows source-height='219'>
    <window class='worksheet' name='EV Sales 2024 in Germany'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vyi95b0q8yknk13dw5u81htbwnw].[none:all_sales:nk]</field>
            <field>[federated.1vyi95b0q8yknk13dw5u81htbwnw].[none:all_sales:ok]</field>
            <field>[federated.1vyi95b0q8yknk13dw5u81htbwnw].[none:bev_sales:ok]</field>
            <field>[federated.1vyi95b0q8yknk13dw5u81htbwnw].[none:brand:nk]</field>
            <field>[federated.1vyi95b0q8yknk13dw5u81htbwnw].[none:non_bev_sales:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8EF1C036-0B96-476F-811E-A9D52CDDDE67}' />
    </window>
    <window class='worksheet' name='BEV/non-BEV Sales 2024 in Germany'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vyi95b0q8yknk13dw5u81htbwnw].[:Measure Names]</field>
            <field>[federated.1vyi95b0q8yknk13dw5u81htbwnw].[none:all_sales:nk]</field>
            <field>[federated.1vyi95b0q8yknk13dw5u81htbwnw].[none:all_sales:ok]</field>
            <field>[federated.1vyi95b0q8yknk13dw5u81htbwnw].[none:bev_sales:ok]</field>
            <field>[federated.1vyi95b0q8yknk13dw5u81htbwnw].[none:brand:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{99BD7D9C-A7FE-46BD-874C-97C516F80DD9}' />
    </window>
    <window class='worksheet' name='EV Charging Points Germany'>
      <cards>
        <edge name='left'>
          <strip size='227'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.086k1gm10z1nmp19scxzo0mo5d3a].[none:Calculation_3650730516158357510:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Parameter 1]</field>
            <field>[federated.086k1gm10z1nmp19scxzo0mo5d3a].[none:Calculation_3650730516158357510:nk]</field>
            <field>[federated.086k1gm10z1nmp19scxzo0mo5d3a].[none:ort:nk]</field>
            <field>[federated.1vyi95b0q8yknk13dw5u81htbwnw].[none:all_sales:ok]</field>
            <field>[federated.1vyi95b0q8yknk13dw5u81htbwnw].[none:bev_sales:ok]</field>
            <field>[federated.1vyi95b0q8yknk13dw5u81htbwnw].[none:brand:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{AA8D1B7E-B449-4052-837A-D03C2E953F2A}' />
    </window>
    <window class='worksheet' name='EV Charging Points Germany (2)'>
      <cards>
        <edge name='left'>
          <strip size='227'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.086k1gm10z1nmp19scxzo0mo5d3a].[none:Calculation_3650730516158357510:nk]' type='filter' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Parameter 1]</field>
            <field>[federated.086k1gm10z1nmp19scxzo0mo5d3a].[none:Calculation_3650730516158357510:nk]</field>
            <field>[federated.086k1gm10z1nmp19scxzo0mo5d3a].[none:ort:nk]</field>
            <field>[federated.086k1gm10z1nmp19scxzo0mo5d3a].[none:postleitzahl:ok]</field>
            <field>[federated.0cwf5am01d93k414a60rr195vtc5].[none:post_code:ok]</field>
            <field>[federated.1vyi95b0q8yknk13dw5u81htbwnw].[none:all_sales:ok]</field>
            <field>[federated.1vyi95b0q8yknk13dw5u81htbwnw].[none:bev_sales:ok]</field>
            <field>[federated.1vyi95b0q8yknk13dw5u81htbwnw].[none:brand:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{75536896-D57F-4B40-B8FD-44D8A5A1FA0F}' />
    </window>
    <window class='worksheet' name='top 10 cities with Charging points'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.086k1gm10z1nmp19scxzo0mo5d3a].[sum:anzahl_ladepunkte:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.086k1gm10z1nmp19scxzo0mo5d3a].[none:ort:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4C4D42E5-AF54-4CC9-80EC-71ADD48F8546}' />
    </window>
    <window class='worksheet' name='Charging station prices'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.12am53r0iui4kf11r918r1n17n20].[none:Price Range (€/kWh):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12am53r0iui4kf11r918r1n17n20].[none:Charging Speed (kW):nk]</field>
            <field>[federated.12am53r0iui4kf11r918r1n17n20].[none:Charging Station Type:nk]</field>
            <field>[federated.12am53r0iui4kf11r918r1n17n20].[none:Notes:nk]</field>
            <field>[federated.12am53r0iui4kf11r918r1n17n20].[none:Price Range (€/kWh):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1A2B7C9B-CF8C-4A98-8EFC-D09CC7EF6CCB}' />
    </window>
    <window class='worksheet' name='Charging station prices20-24'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.14xasa601bf0p71gikjyg0ojtaz3].[none:charging_station_type:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12am53r0iui4kf11r918r1n17n20].[none:Charging Speed (kW):nk]</field>
            <field>[federated.12am53r0iui4kf11r918r1n17n20].[none:Charging Station Type:nk]</field>
            <field>[federated.12am53r0iui4kf11r918r1n17n20].[none:Notes:nk]</field>
            <field>[federated.12am53r0iui4kf11r918r1n17n20].[none:Price Range (€/kWh):nk]</field>
            <field>[federated.14xasa601bf0p71gikjyg0ojtaz3].[none:charging_station_type:nk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='2' />
      </viewpoint>
      <simple-id uuid='{DCC96421-97C6-429E-AE1F-19DF7988675E}' />
    </window>
    <window class='worksheet' name='EV models from different brand'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.06ad92g138o9vi16zgmyt0k9zjql].[none:brand_name:nk]</field>
            <field>[federated.1vyi95b0q8yknk13dw5u81htbwnw].[none:brand:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9E855C44-A6AA-4A7D-A49B-F51E43456BE7}' />
    </window>
    <window class='worksheet' name='DS1-Scatter-EUR/KM'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.06ad92g138o9vi16zgmyt0k9zjql].[Brand Name (group)]' type='filter' />
            <card mode='checkdropdown' param='[federated.06ad92g138o9vi16zgmyt0k9zjql].[none:car_name:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.06ad92g138o9vi16zgmyt0k9zjql].[none:brand_name:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.06ad92g138o9vi16zgmyt0k9zjql].[Brand Name (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.06ad92g138o9vi16zgmyt0k9zjql].[Brand Name (group)]</field>
            <field>[federated.06ad92g138o9vi16zgmyt0k9zjql].[none:brand_name:nk]</field>
            <field>[federated.06ad92g138o9vi16zgmyt0k9zjql].[none:car_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8281C413-99A2-46B5-908D-D62B78F90F43}' />
    </window>
    <window class='worksheet' name='DS1-Scatter-Battery/KM'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.06ad92g138o9vi16zgmyt0k9zjql].[none:brand_name:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.06ad92g138o9vi16zgmyt0k9zjql].[Brand Name (group)]' type='filter' />
            <card pane-specification-id='0' param='[federated.06ad92g138o9vi16zgmyt0k9zjql].[Brand Name (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.06ad92g138o9vi16zgmyt0k9zjql].[Brand Name (group)]</field>
            <field>[federated.06ad92g138o9vi16zgmyt0k9zjql].[none:brand_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4EAD68F5-E58B-4E80-AFF6-75ED40D61C58}' />
    </window>
    <window class='worksheet' name='Fuel stations'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0cwf5am01d93k414a60rr195vtc5].[cnt:City (copy)_3650730514485092356:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.0cwf5am01d93k414a60rr195vtc5].[none:city:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0cwf5am01d93k414a60rr195vtc5].[none:city:nk]</field>
            <field>[federated.0zbytvf0y71jl51fsagsn0d5t54n].[none:city:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{39C518C4-1877-4511-9BAE-667D23D8DBE9}' />
    </window>
    <window class='worksheet' name='EV DE/Europe Sales Trends'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0dg9z711egh454194wrp511fclx2].[none:brand:nk]' type='filter' />
            <card param='[federated.0dg9z711egh454194wrp511fclx2].[none:year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='3' param='[federated.0dg9z711egh454194wrp511fclx2].[none:brand:nk]&#10;[federated.0dg9z711egh454194wrp511fclx2].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dg9z711egh454194wrp511fclx2].[:Measure Names]</field>
            <field>[federated.0dg9z711egh454194wrp511fclx2].[none:brand:nk]</field>
            <field>[federated.0dg9z711egh454194wrp511fclx2].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4062D38E-56A7-4E2D-8E22-3F585CDF5056}' />
    </window>
    <window class='worksheet' name='EV DE/Global Share'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[federated.0dg9z711egh454194wrp511fclx2].[none:brand:nk]' type='filter' />
            <card pane-specification-id='3' param='[federated.0dg9z711egh454194wrp511fclx2].[none:brand:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dg9z711egh454194wrp511fclx2].[none:brand:nk]</field>
            <field>[federated.0dg9z711egh454194wrp511fclx2].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{453574E2-5EB1-425D-85A0-80D440C96336}' />
    </window>
    <window class='worksheet' name='Global Sales'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0to5re41omz4tb1bzsjza0u5by2q].[none:year:ok]' type='filter' />
            <card pane-specification-id='2' param='[federated.0to5re41omz4tb1bzsjza0u5by2q].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0to5re41omz4tb1bzsjza0u5by2q].[none:brand:nk]</field>
            <field>[federated.0to5re41omz4tb1bzsjza0u5by2q].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CFD761CF-3145-4863-9786-6EB382651D96}' />
    </window>
    <window class='worksheet' name='Sales Europe/Germany BEV'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0to5re41omz4tb1bzsjza0u5by2q].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0to5re41omz4tb1bzsjza0u5by2q].[none:brand:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4AC97D91-1980-4AC4-9CCF-4A7ADE6D96A7}' />
    </window>
    <window class='worksheet' name='Number of charging stations Germany'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0kwb95s04avje60zm1d4j0f9vovi].[none:year:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0kwb95s04avje60zm1d4j0f9vovi].[sum:value:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kwb95s04avje60zm1d4j0f9vovi].[none:mode:nk]</field>
            <field>[federated.0kwb95s04avje60zm1d4j0f9vovi].[none:region:nk]</field>
            <field>[federated.0kwb95s04avje60zm1d4j0f9vovi].[none:year:qk]</field>
            <field>[federated.0kwb95s04avje60zm1d4j0f9vovi].[sum:value:ok]</field>
            <field>[federated.0kwb95s04avje60zm1d4j0f9vovi].[sum:value:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AA899800-3F8E-431A-94D9-75DDEAD7C450}' />
    </window>
    <window class='worksheet' name='Modes over time '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0kwb95s04avje60zm1d4j0f9vovi].[sum:value:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kwb95s04avje60zm1d4j0f9vovi].[none:mode:nk]</field>
            <field>[federated.0kwb95s04avje60zm1d4j0f9vovi].[none:region:nk]</field>
            <field>[federated.0kwb95s04avje60zm1d4j0f9vovi].[none:year:ok]</field>
            <field>[federated.0kwb95s04avje60zm1d4j0f9vovi].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D15D767A-2BD2-4D6F-8F8D-5EB903582355}' />
    </window>
    <window class='worksheet' maximized='true' name='BEV Modes over time visual'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0kwb95s04avje60zm1d4j0f9vovi].[none:mode:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kwb95s04avje60zm1d4j0f9vovi].[none:mode:nk]</field>
            <field>[federated.0kwb95s04avje60zm1d4j0f9vovi].[none:region:nk]</field>
            <field>[federated.0kwb95s04avje60zm1d4j0f9vovi].[none:year:ok]</field>
            <field>[federated.0kwb95s04avje60zm1d4j0f9vovi].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{662E92C0-7528-4AF5-BE1B-F6F9E3F0682C}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='BEV Modes over time visual' width='192'>
      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
      4c8L/B/r3K/84H7cdAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='BEV/non-BEV Sales 2024 in Germany' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='144' name='Charging station prices' width='192'>
      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
      rAEAAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Charging station prices20-24' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='DS1-Scatter-Battery/KM' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='DS1-Scatter-EUR/KM' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='EV Charging Points Germany' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='EV Charging Points Germany (2)' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='EV DE/Europe Sales Trends' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='EV DE/Global Share' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='EV Sales 2024 in Germany' width='192'>
      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
      7D906rgbPHDC2wAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='EV models from different brand' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Fuel stations' width='192'>
      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
      ABKNAZBo/wHh2doaxHSo3AAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Global Sales' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Modes over time ' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='78' name='Number of charging stations Germany' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sales Europe/Germany BEV' width='192'>
      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
      KvdQto0IgPDKEqpMbaDqQNwCUSQCILyyRD5DY1Utfs/BuVAhAiC8srV8iqaq+te63LhXiQAI
      ryyhyvu+BWIjEQDhlSRVGQ8SDfu4CPdFRACEV1KcBVYfqi73ULaVCIDwShKqTCQQJuwPlnso
      20oEQHglB6EI90VEAIQf5LhPa1BaDsgssPVEAIQflDc0coYmAiBUppyhopn6jt4GXS4iAMIP
      Shdy+Ly+A1GDspEIgPCD4vk0hyINB+oT4CIRAOF7PS3CTROtquPg7f7bFADXdV9YR2HbNrZt
      P7cs7B+mYyMXFJqq6nb1HeBF5Qiu62Ka5nPLW7Hl2/pUVeWrr75iaGiI+vp6vvnmG6LRKL29
      vYyOjmLbNmfOnOHevXs4jsO5c+eYmZmhoaEB27Y5ceLEljdC2DmWY/27CHd3ToAdx+G7774j
      k8lw6dIl/vWvfxGJROju7mZ6ehrXdWlubiYWi+G6Lu3t7cTjcfr6+picnOTChQubCuq21KIM
      DAwgSRKWZeHxeKitrSWXy9HR0UFjYyMjIyP09/cTDAZZXl5mZWWFdDrNhx9+iOM4pXcQy7K2
      Ohxhm6XyWVwXqv3hHXt9itU4kiQhSRIDAwMMDw8DT48cQqEQkUgE13V55513uHXrFpIk8c47
      7zA2NkY+n+fatWu8//77u1+Lsn6FtbW1vP/++9y5cwfTNAmFQliWhc/nK22kx+OhuroawzBw
      HAev978fsODxeA7kidZ+llCfPgqpyh/asdemuOMXv9b78Y9/TCKR4O7du7iuWzo0Ki57PB58
      Ph+BQABN06iu3ty9SlsOgCzLTE9Pl3bex48fo6oq/f39jI2NMTc3x/nz5xkfH8e2bd59910M
      w+DQoUM8ePCA06dPlza8WIwk7B0JTaYuFKEqsDMBcF239NrD01qU+/fvs7Kywvz8PCsrK5im
      SXt7O6lUiuHhYTo6OojFYgwPD9Pd3U08Huf06dOMjIzQ1NS0qXFuey1KMaEej6d0eOP1ep/5
      /ouIWpS96dPJr4hW1fPT7vM78vN/qBal+Jve6/Xiui62bePz+Z5Zfl07UotSbHkrLhd/o6//
      vrA/FC+BlvMmOEmSSvuQJEmlHX798laIPVJ4qayex3JsGsO15R7KjhEBEF4qXVCQkA7cJJj1
      RACEl0qpWYI+P7UH4FlgLyMCILzUWj594FogNhIBEF4qkc8ciGcBfx8RAOGFNFNHMdQDOQlm
      PREA4YXyhkZO1zh0gIpwX0QEQHghWc8DHOgTYBABEF4ioWZoCNfgO+CPkDjYWye8Ftd1SeRl
      GsO1eD0H+94sEQDhOY7rElczNEcO9iVQEAEQXsBxnQPbA7SRCIDwnLyhYdoW9eGDewtEkQiA
      8Jy4miESCB/IGpSNRACE56wqSSKBEFUH6FlgLyMCIDwnocpEw3V4DvgJMIgACBu4rktCzXCo
      +uCfAMM2BMB1XVKpFIVCAXg6i391dRXXdYnFYiwvLz+dWbS2xurqKo7jkMvlsCyLXC635Q0Q
      tpdqFsgZBaJlnAVWKBRIpVKl/47H4xiGQS6XY25uDsMwUBSF+fl5TNNEURQAMpnMC/upvs+W
      A6BpGqOjoyQSCQBmZma4fv062WyW2dlZVlZWmJqaYm5ujoWFBWKxGPfv32dycpJsNrvV1Qvb
      TC7ksV2nbLPAHMdhdnaWyclJAHK5HFeuXCGdTjM2NoZlWTx48ICxsTF0XWdqaoo7d+6wurrK
      7Ozspte3Lb1Ap06dQpIkFEUhk8nQ3NxMPp+npaWFaDTK1atXefPNNwmFQqytrTE7O0tzczMD
      AwOluhTHcTBN84WNYMLuiefSOLZDtS+EYRi7sk7btjFNszRvvLe3F1mWcRyH8fFx+vv7cRwH
      n89HZ2cnN2/exO/309XVxejoKIqicP36dX75y1+WtxcomUyi6zrz8/M0NTVh2zayLNPQ0ICq
      qhiGQVVVFV1dXaiqiqIo1NbWljbc7/eLVogyy+g5WmsbCQZ251FIxdYQv//5h2+rqoplWTx6
      9Ii2tjZM00TXdbxeL7quo2kaPp+P6upqjh49yvz8PN3d3bvbDCfLMgsLCwAMDQ3R2dnJo0eP
      6Ozs5LvvviObzTI4OMjk5CS2bfPWW28hSRJNTU3EYjFqaw/uhOv9qDgLrFyKvUCqqpLNZrl0
      6RLxeJxgMEgikWBsbIze3l7S6TS3b9+mv7+fdDpNZ2cn9+/f3/T6tr0XaL3ij5Yk6ZnlFxG9
      QOWnWyZ/uv1fDLSd4Hx7766s84d6gTb+XXi1/elVSJIk7ejetn5wB/2mqoNAt409PQtsJ/Yn
      8TmAUKLoKqZtHegeoI1EAISSeD5DbTBCwFs5h6EiAEJJUn1ahOsXARAqjfvvSTBP7wGqnN2i
      crZU+EGrSpLWmmi5h7GrRAAEAAqWjmbpNIZryj2UXSUCIAAQz8sEfQFqKmASzHoiAAIAsXya
      Kl+QmqAIgFCBYvk0DRVQg7KRCIAAPC3C2q1Hoe4lIgACumWSLeRFAITKlDNUdNvcs/cA7SQR
      AIG0pmDYZlkfhlcuIgDC0yLcUE3FnQCDCEDFe9oCIdNywJ8D8DIiABXOdh0SqlyRJ8AgAlDx
      DPvpFaBKPP6HbQiA4zg8fPiQTCZDoVBgZGSE0dFRbNvm7t27jI+PY9s2k5OTfPfdd1iWxcrK
      CqqqsrKysh3bIGxBwTLIGVpZ5wGv57ouyWSSmZkZXNdlcnKS4eFhZFlmZWWF4eFhFEVhcXGR
      kZER8vk8S0tLuK7L48ePN90LtOUbvw3DIJVKUV1dTU1NDWfOnOH27dvMz8/jui4NDQ2Mjo5S
      X1+P1+tlcXGR1dVVTNNkYGBgq6sXtiiRz1ATrNozPaCu65LL5VhbW6O7u5uenh6SySRzc3Ok
      02nOnTvHvXv3UFWVwcFBHj58SKFQIJvNEggEdr8WJRQKcfjwYQA8Hg/T09Osrq5y5MgRIpEI
      DQ0N3Lt3j/b29lIv0MLCAo2NjdTU1IheoDJblhNEfCE8LrvWA7TR+l4gr9fLsWPHWF5eRpIk
      MpkMo6OjDA0NkcvlCIVC2LaN3++nqqoK0zRLgfnFL36x6XVvOQC2baPrOpZloaoqx48fx3Vd
      FEWhUCiQz+c5evQoiUQCj8dDU1MTnZ2deDwelpeXOXz4sOgFKqOUrhCtriMcLM87wMZeINd1
      KRQKGIaBpmmEw2Hee+89Hj9+jGEYJJNJAoEA2WyWWCxGOBzGtm1Onz7NnTt3GBwc3N1eIFVV
      0XUdAF3XWVhYwOfz0dfXx5MnTzAMg5MnTzI7O4vjOLS2thIMBqmtrSWdTm919cIWJfIZzrR2
      l3sYJbZts7i4SH19PbIsI8syqqrS39+PYRgsLCzQ29tLPp9neXmZU6dOoSgKTU1Nr7W+He0F
      2gzRC7T7dMvkfw7/H37T+x/0RI+UZQyb6QXabpIkVdDkT+E5KS2LR/JQFzr4j0J6GRGACpbS
      svg8XupCB/th2N9HBKCCJVX53z1AzxfTVgoRgAq2oiRoq7AWiI1EACqUaVtkCrk98wlwuYgA
      VKi8WUAz9Yq9B6hIBKBC5XQVzTJoqZCH4b2MCECFiqsZqgPhij4BBhGAipVQZaJVtRXxLODv
      IwJQgRzXIanKtEQaK6oI90Uqe+srlOXYpNRsxZ8AgwhARSpeAq3UaZDriQBUoIQqE/IHiAT2
      xiSYchIBqECJf18B2iuzwMpJBKACreVS1IeqK/4SKIgAVKREXq74WyCKRAAqjO04pLRsRfaA
      vsiWA1Cc/2sYBo7jkEwmicViuK5LJpMhmUziui7pdJpUKlWa82nbNpqmbcc2CJuQ0rI4rkN0
      D18CNQwDRVFK+9bq6iqGYVAoFFhbW8OyLDRNe2YZIJ/P734tiqZpfPvtt5w5c4bGxkZWV1eJ
      x+N0dXWxsLCA1+ulubmZWCwGQHd3N3Nzc4RCIerr6zl69OhWhyBsQqag4AL1e3QWmOM4TE1N
      EY/H+eCDD1hcXMS2bVZWVsjlckSjUeLxOMlkkmg0SiqVIpPJ0NPTw9zcHENDQ5ta35YDEA6H
      6evrQ5IkwuEw7e3tLC4uIkkSbW1tRKNRrl69yptvvlmqRZmdnaWlpYXTp0+LWpRdFlNShL0B
      vK5UthqUjdbXong8Hvr7+xkeHkaSJE6ePMnVq1fp6elBVVVOnTrFzZs38fl8vPHGG9y6dQtF
      Ubh69So///nPd78XaP0KC4UC4+PjXLp0CVmWyeVyKIpCbW0thUIBy7IIhUJ0dXWhKAqqqhKJ
      REQtyi5KFRRaa6MEAoFyDwV4vhZl459dv36dvr4+mpqamJmZwTAMvF4vhmGg6zo+n4/q6mra
      2tpYXl6ms7NzUyHY8jmALMvMzc0xOztLKpXCtm3Gx8cJBAIoisKTJ08YGhoimUyyvLzMkSNH
      aGxsZGhoSFQj7jLbsZ82QUf2bhO0aZpMTEyQzWZZWlrCMAxmZmZYXFzk0KFD3Lp1i2PHjtHc
      3MzY2BjHjh2jqamJvr4+stnspte3o7UoxR8tSdIzyy8ialF2Xs7Q+F9j/5ef9pznjaZj5R4O
      sLlaFNd1cV0Xj8fzzPLrkiRJ2tG9bf3OvtljM2H7aaZO3tBo3qefAUiSVNqP1i9vhfgcoIKk
      NJmQL0AkEC73UPYMEYAKspZL0xCuwVeBj0J6GRGAClF8FFJjuFYEYB0RgArhuC4pVdwDtJEI
      wB4Rj8ef+WBK13WSyWTpz5aWligUCqRSKR49ekShUACefog0Pz9POp3GcRwWFxdJJBI4jsP8
      /HzpZ9iuQ0pTOFThLRAbiQDsEX/4wx9YWloCnu7Uly9f5s9//jOO4/CnP/2J6elpcrkcN27c
      4O7du/zjH/8AYGJigmvXrpX+zpUrV/j000+5efMm169f59NPP0XTNFKqjItLTbBye0BfRARg
      j7hw4UJp2ePx8Mknn9DQ0ICu6ziOw/3795EkiY8//pjV1VW6uroAWFhY4KOPPuLw4cPMzMzw
      3nvvMTAwwM2bN/nRj35EX18fyysrfPngW5azcXRrb9z+sFeIT532GMuySreGAPj9fn7/+9+z
      srLC5cuXkWWZjz76iK6uLkzTJBQKoSgKiqLQ2tpKPp8nnU7T0NCAqqrIsow/FCCWT+O4Lpql
      l3kL9xYRgD3Asizu3LnD/Pw8vb29tLa2cvv2bZaWlhgdHeXJkyfk83kuXbrEl19+ybVr11AU
      BVmWGRgY4IsvvqCxsZEzZ87w17/+lUAgwM9+9jO++OILIpEIR9vaOZE8wrH6QxxvOFzuzd1T
      xBNi9oEf+tjftm08Hg+SJOE4TulT0vXf/9P4f3GsvpX/OP7WLo/++5X7CTFib9sHfuhjf6/3
      v6/rrw9J8fu24yDrORrCNTs3yH1KnARXgLyhYTkOteIK0HP+P2J7WS/PvgTrAAAAAElFTkSu
      QmCC
    </thumbnail>
    <thumbnail height='192' name='top 10 cities with Charging points' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
